#![allow(bad_style)]
/* automatically generated by rust-bindgen 0.71.1 */

#[doc = r" If Bindgen could only determine the size and alignment of a"]
#[doc = r" type, it is represented like this."]
#[derive(PartialEq, Copy, Clone, Debug, Hash)]
#[repr(C)]
pub struct __BindgenOpaqueArray<T: Copy, const N: usize>(pub [T; N]);
impl<T: Copy + Default, const N: usize> Default for __BindgenOpaqueArray<T, N> {
    fn default() -> Self {
        Self([<T as Default>::default(); N])
    }
}
pub const WINT_MIN: u32 = 0;
pub const APUCMD_BUFFERSIZE: u32 = 0;
pub const APUCMD_START: u32 = 1;
pub const APUCMD_NOOP1: u32 = 2;
pub const APUCMD_NOOP2: u32 = 3;
pub const APUCMD_SETRATE: u32 = 4;
pub const ONE_SECOND_IN_TICKS: u32 = 10000000;
pub const HALF_SECOND_IN_TICKS: u32 = 5000000;
pub const TWO_HUNDRED_FIFTY_MILLISECONDS_IN_TICKS: u32 = 2500000;
pub const TWO_HUNDRED_MILLISECONDS_IN_TICKS: u32 = 2000000;
pub const HUNDRED_MILLISECONDS_IN_TICKS: u32 = 1000000;
pub const TEN_MILLISECONDS_IN_TICKS: u32 = 100000;
pub const TWO_MILLISECONDS_IN_TICKS: u32 = 20000;
pub const ONE_MILLISECOND_IN_TICKS: u32 = 10000;
pub const HALF_MILLISECOND_IN_TICKS: u32 = 5000;
pub const QUARTER_MILLISECOND_IN_TICKS: u32 = 2500;
pub const ONE_MICROSECOND_IN_TICKS: u32 = 10;
pub const CSR_CPURESET: u32 = 4078;
pub const CSR_WATERMARK: u32 = 4080;
pub const CSR_PROGRAMCOUNTER: u32 = 4092;
pub const CSR_HEAPSTART: u32 = 2304;
pub const CSR_HEAPEND: u32 = 2305;
pub const CSR_BRKPOS: u32 = 2306;
pub const CSR_BRKLOCK: u32 = 2307;
pub const APPMEM_START: u32 = 0;
pub const HEAP_START: u32 = 4096;
pub const HEAP_END: u32 = 251658240;
pub const CONSOLE_FRAMEBUFFER_START: u32 = 252706816;
pub const CONSOLE_CHARACTERBUFFER_START: u32 = 253022208;
pub const CONSOLE_COLORBUFFER_START: u32 = 253030400;
pub const KERNEL_TEMP_MEMORY: u32 = 253046784;
pub const GENERIC_TEMP_BUFFER: u32 = 253054976;
pub const ISR_STACK_TOP: u32 = 253063168;
pub const UART_OUTPUT_TEMP: u32 = 253071360;
pub const GDB_DEBUG_DATA: u32 = 253079552;
pub const GDB_RESPONSE_BUFFER: u32 = 253087744;
pub const GDB_PACKET_BUFFER: u32 = 253095936;
pub const KERNEL_GFX_CONTEXT: u32 = 253100032;
pub const KERNEL_INPUTBUFFER: u32 = 253104128;
pub const KERNEL_DEVICECONTROL: u32 = 253108224;
pub const KERNEL_NOMANSLAND: u32 = 253112320;
pub const TASKMEM_END_STACK_END: u32 = 268238848;
pub const STACK_BASE_HART1: u32 = 268304112;
pub const STACK_BASE_HART0: u32 = 268304368;
pub const ROMSHADOW_START: u32 = 268304384;
pub const ROMSHADOW_END_MEM_END: u32 = 268435455;
pub const MAX_HARTS: u32 = 2;
pub const DEVICE_BASE: u32 = 2147483648;
pub const DEVICE_SPAD: u32 = 2147483648;
pub const DEVICE_LEDS: u32 = 2147549184;
pub const DEVICE_VPUC: u32 = 2147614720;
pub const DEVICE_SPIC: u32 = 2147680256;
pub const DEVICE_DEV0: u32 = 2147745792;
pub const DEVICE_ESPC: u32 = 2147811328;
pub const DEVICE_APUC: u32 = 2147876864;
pub const DEVICE_MAIL: u32 = 2147942400;
pub const DEVICE_UART: u32 = 2148007936;
pub const DEVICE_CSR0: u32 = 2148073472;
pub const DEVICE_CSR1: u32 = 2148139008;
pub const MSTATUS_UIE: u32 = 1;
pub const MSTATUS_SIE: u32 = 2;
pub const MSTATUS_HIE: u32 = 4;
pub const MSTATUS_MIE: u32 = 8;
pub const MSTATUS_UPIE: u32 = 16;
pub const MSTATUS_SPIE: u32 = 32;
pub const MSTATUS_HPIE: u32 = 64;
pub const MSTATUS_MPIE: u32 = 128;
pub const MSTATUS_SPP: u32 = 256;
pub const MSTATUS_VS: u32 = 1536;
pub const MSTATUS_MPP: u32 = 6144;
pub const MSTATUS_FS: u32 = 24576;
pub const MSTATUS_XS: u32 = 98304;
pub const MSTATUS_MPRV: u32 = 131072;
pub const MSTATUS_SUM: u32 = 262144;
pub const MSTATUS_MXR: u32 = 524288;
pub const MSTATUS_TVM: u32 = 1048576;
pub const MSTATUS_TW: u32 = 2097152;
pub const MSTATUS_TSR: u32 = 4194304;
pub const MSTATUS32_SD: u32 = 2147483648;
pub const MSTATUS_UXL: u64 = 12884901888;
pub const MSTATUS_SXL: u64 = 51539607552;
pub const MSTATUS64_SD: i64 = -9223372036854775808;
pub const SSTATUS_UIE: u32 = 1;
pub const SSTATUS_SIE: u32 = 2;
pub const SSTATUS_UPIE: u32 = 16;
pub const SSTATUS_SPIE: u32 = 32;
pub const SSTATUS_SPP: u32 = 256;
pub const SSTATUS_VS: u32 = 1536;
pub const SSTATUS_FS: u32 = 24576;
pub const SSTATUS_XS: u32 = 98304;
pub const SSTATUS_SUM: u32 = 262144;
pub const SSTATUS_MXR: u32 = 524288;
pub const SSTATUS32_SD: u32 = 2147483648;
pub const SSTATUS_UXL: u64 = 12884901888;
pub const SSTATUS64_SD: i64 = -9223372036854775808;
pub const USTATUS_UIE: u32 = 1;
pub const USTATUS_UPIE: u32 = 16;
pub const DCSR_XDEBUGVER: u32 = 3221225472;
pub const DCSR_NDRESET: u32 = 536870912;
pub const DCSR_FULLRESET: u32 = 268435456;
pub const DCSR_EBREAKM: u32 = 32768;
pub const DCSR_EBREAKH: u32 = 16384;
pub const DCSR_EBREAKS: u32 = 8192;
pub const DCSR_EBREAKU: u32 = 4096;
pub const DCSR_STOPCYCLE: u32 = 1024;
pub const DCSR_STOPTIME: u32 = 512;
pub const DCSR_CAUSE: u32 = 448;
pub const DCSR_DEBUGINT: u32 = 32;
pub const DCSR_HALT: u32 = 8;
pub const DCSR_STEP: u32 = 4;
pub const DCSR_PRV: u32 = 3;
pub const DCSR_CAUSE_NONE: u32 = 0;
pub const DCSR_CAUSE_SWBP: u32 = 1;
pub const DCSR_CAUSE_HWBP: u32 = 2;
pub const DCSR_CAUSE_DEBUGINT: u32 = 3;
pub const DCSR_CAUSE_STEP: u32 = 4;
pub const DCSR_CAUSE_HALT: u32 = 5;
pub const MCONTROL_SELECT: u32 = 524288;
pub const MCONTROL_TIMING: u32 = 262144;
pub const MCONTROL_ACTION: u32 = 258048;
pub const MCONTROL_CHAIN: u32 = 2048;
pub const MCONTROL_MATCH: u32 = 1920;
pub const MCONTROL_M: u32 = 64;
pub const MCONTROL_H: u32 = 32;
pub const MCONTROL_S: u32 = 16;
pub const MCONTROL_U: u32 = 8;
pub const MCONTROL_EXECUTE: u32 = 4;
pub const MCONTROL_STORE: u32 = 2;
pub const MCONTROL_LOAD: u32 = 1;
pub const MCONTROL_TYPE_NONE: u32 = 0;
pub const MCONTROL_TYPE_MATCH: u32 = 2;
pub const MCONTROL_ACTION_DEBUG_EXCEPTION: u32 = 0;
pub const MCONTROL_ACTION_DEBUG_MODE: u32 = 1;
pub const MCONTROL_ACTION_TRACE_START: u32 = 2;
pub const MCONTROL_ACTION_TRACE_STOP: u32 = 3;
pub const MCONTROL_ACTION_TRACE_EMIT: u32 = 4;
pub const MCONTROL_MATCH_EQUAL: u32 = 0;
pub const MCONTROL_MATCH_NAPOT: u32 = 1;
pub const MCONTROL_MATCH_GE: u32 = 2;
pub const MCONTROL_MATCH_LT: u32 = 3;
pub const MCONTROL_MATCH_MASK_LOW: u32 = 4;
pub const MCONTROL_MATCH_MASK_HIGH: u32 = 5;
pub const PRV_U: u32 = 0;
pub const PRV_S: u32 = 1;
pub const PRV_H: u32 = 2;
pub const PRV_M: u32 = 3;
pub const SATP32_MODE: u32 = 2147483648;
pub const SATP32_ASID: u32 = 2143289344;
pub const SATP32_PPN: u32 = 4194303;
pub const SATP64_MODE: i64 = -1152921504606846976;
pub const SATP64_ASID: u64 = 1152903912420802560;
pub const SATP64_PPN: u64 = 17592186044415;
pub const SATP_MODE_OFF: u32 = 0;
pub const SATP_MODE_SV32: u32 = 1;
pub const SATP_MODE_SV39: u32 = 8;
pub const SATP_MODE_SV48: u32 = 9;
pub const SATP_MODE_SV57: u32 = 10;
pub const SATP_MODE_SV64: u32 = 11;
pub const PMP_R: u32 = 1;
pub const PMP_W: u32 = 2;
pub const PMP_X: u32 = 4;
pub const PMP_A: u32 = 24;
pub const PMP_L: u32 = 128;
pub const PMP_SHIFT: u32 = 2;
pub const PMP_TOR: u32 = 8;
pub const PMP_NA4: u32 = 16;
pub const PMP_NAPOT: u32 = 24;
pub const IRQ_U_SOFT: u32 = 0;
pub const IRQ_S_SOFT: u32 = 1;
pub const IRQ_H_SOFT: u32 = 2;
pub const IRQ_M_SOFT: u32 = 3;
pub const IRQ_U_TIMER: u32 = 4;
pub const IRQ_S_TIMER: u32 = 5;
pub const IRQ_H_TIMER: u32 = 6;
pub const IRQ_M_TIMER: u32 = 7;
pub const IRQ_U_EXT: u32 = 8;
pub const IRQ_S_EXT: u32 = 9;
pub const IRQ_H_EXT: u32 = 10;
pub const IRQ_M_EXT: u32 = 11;
pub const IRQ_COP: u32 = 12;
pub const IRQ_HOST: u32 = 13;
pub const DEFAULT_RSTVEC: u32 = 4096;
pub const CLINT_BASE: u32 = 33554432;
pub const CLINT_SIZE: u32 = 786432;
pub const EXT_IO_BASE: u32 = 1073741824;
pub const DRAM_BASE: u32 = 2147483648;
pub const PTE_V: u32 = 1;
pub const PTE_R: u32 = 2;
pub const PTE_W: u32 = 4;
pub const PTE_X: u32 = 8;
pub const PTE_U: u32 = 16;
pub const PTE_G: u32 = 32;
pub const PTE_A: u32 = 64;
pub const PTE_D: u32 = 128;
pub const PTE_SOFT: u32 = 768;
pub const PTE_PPN_SHIFT: u32 = 10;
pub const MSTATUS_SD: u32 = 2147483648;
pub const SSTATUS_SD: u32 = 2147483648;
pub const RISCV_PGLEVEL_BITS: u32 = 10;
pub const SATP_MODE: u32 = 2147483648;
pub const RISCV_PGSHIFT: u32 = 12;
pub const RISCV_PGSIZE: u32 = 4096;
pub const MATCH_SLLI_RV32: u32 = 4115;
pub const MASK_SLLI_RV32: u32 = 4261441663;
pub const MATCH_SRLI_RV32: u32 = 20499;
pub const MASK_SRLI_RV32: u32 = 4261441663;
pub const MATCH_SRAI_RV32: u32 = 1073762323;
pub const MASK_SRAI_RV32: u32 = 4261441663;
pub const MATCH_FRFLAGS: u32 = 1056883;
pub const MASK_FRFLAGS: u32 = 4294963327;
pub const MATCH_FSFLAGS: u32 = 1052787;
pub const MASK_FSFLAGS: u32 = 4293947519;
pub const MATCH_FSFLAGSI: u32 = 1069171;
pub const MASK_FSFLAGSI: u32 = 4293947519;
pub const MATCH_FRRM: u32 = 2105459;
pub const MASK_FRRM: u32 = 4294963327;
pub const MATCH_FSRM: u32 = 2101363;
pub const MASK_FSRM: u32 = 4293947519;
pub const MATCH_FSRMI: u32 = 2117747;
pub const MASK_FSRMI: u32 = 4293947519;
pub const MATCH_FSCSR: u32 = 3149939;
pub const MASK_FSCSR: u32 = 4293947519;
pub const MATCH_FRCSR: u32 = 3154035;
pub const MASK_FRCSR: u32 = 4294963327;
pub const MATCH_RDCYCLE: u32 = 3221233779;
pub const MASK_RDCYCLE: u32 = 4294963327;
pub const MATCH_RDTIME: u32 = 3222282355;
pub const MASK_RDTIME: u32 = 4294963327;
pub const MATCH_RDINSTRET: u32 = 3223330931;
pub const MASK_RDINSTRET: u32 = 4294963327;
pub const MATCH_RDCYCLEH: u32 = 3355451507;
pub const MASK_RDCYCLEH: u32 = 4294963327;
pub const MATCH_RDTIMEH: u32 = 3356500083;
pub const MASK_RDTIMEH: u32 = 4294963327;
pub const MATCH_RDINSTRETH: u32 = 3357548659;
pub const MASK_RDINSTRETH: u32 = 4294963327;
pub const MATCH_SCALL: u32 = 115;
pub const MASK_SCALL: u32 = 4294967295;
pub const MATCH_SBREAK: u32 = 1048691;
pub const MASK_SBREAK: u32 = 4294967295;
pub const MATCH_FMV_X_S: u32 = 3758096467;
pub const MASK_FMV_X_S: u32 = 4293947519;
pub const MATCH_FMV_S_X: u32 = 4026531923;
pub const MASK_FMV_S_X: u32 = 4293947519;
pub const MATCH_FENCE_TSO: u32 = 2200961039;
pub const MASK_FENCE_TSO: u32 = 4293947519;
pub const MATCH_PAUSE: u32 = 16777231;
pub const MASK_PAUSE: u32 = 4294967295;
pub const MATCH_BEQ: u32 = 99;
pub const MASK_BEQ: u32 = 28799;
pub const MATCH_BNE: u32 = 4195;
pub const MASK_BNE: u32 = 28799;
pub const MATCH_BLT: u32 = 16483;
pub const MASK_BLT: u32 = 28799;
pub const MATCH_BGE: u32 = 20579;
pub const MASK_BGE: u32 = 28799;
pub const MATCH_BLTU: u32 = 24675;
pub const MASK_BLTU: u32 = 28799;
pub const MATCH_BGEU: u32 = 28771;
pub const MASK_BGEU: u32 = 28799;
pub const MATCH_JALR: u32 = 103;
pub const MASK_JALR: u32 = 28799;
pub const MATCH_JAL: u32 = 111;
pub const MASK_JAL: u32 = 127;
pub const MATCH_LUI: u32 = 55;
pub const MASK_LUI: u32 = 127;
pub const MATCH_AUIPC: u32 = 23;
pub const MASK_AUIPC: u32 = 127;
pub const MATCH_ADDI: u32 = 19;
pub const MASK_ADDI: u32 = 28799;
pub const MATCH_SLLI: u32 = 4115;
pub const MASK_SLLI: u32 = 4227887231;
pub const MATCH_SLTI: u32 = 8211;
pub const MASK_SLTI: u32 = 28799;
pub const MATCH_SLTIU: u32 = 12307;
pub const MASK_SLTIU: u32 = 28799;
pub const MATCH_XORI: u32 = 16403;
pub const MASK_XORI: u32 = 28799;
pub const MATCH_SRLI: u32 = 20499;
pub const MASK_SRLI: u32 = 4227887231;
pub const MATCH_SRAI: u32 = 1073762323;
pub const MASK_SRAI: u32 = 4227887231;
pub const MATCH_ORI: u32 = 24595;
pub const MASK_ORI: u32 = 28799;
pub const MATCH_ANDI: u32 = 28691;
pub const MASK_ANDI: u32 = 28799;
pub const MATCH_ADD: u32 = 51;
pub const MASK_ADD: u32 = 4261441663;
pub const MATCH_SUB: u32 = 1073741875;
pub const MASK_SUB: u32 = 4261441663;
pub const MATCH_SLL: u32 = 4147;
pub const MASK_SLL: u32 = 4261441663;
pub const MATCH_SLT: u32 = 8243;
pub const MASK_SLT: u32 = 4261441663;
pub const MATCH_SLTU: u32 = 12339;
pub const MASK_SLTU: u32 = 4261441663;
pub const MATCH_XOR: u32 = 16435;
pub const MASK_XOR: u32 = 4261441663;
pub const MATCH_SRL: u32 = 20531;
pub const MASK_SRL: u32 = 4261441663;
pub const MATCH_SRA: u32 = 1073762355;
pub const MASK_SRA: u32 = 4261441663;
pub const MATCH_OR: u32 = 24627;
pub const MASK_OR: u32 = 4261441663;
pub const MATCH_AND: u32 = 28723;
pub const MASK_AND: u32 = 4261441663;
pub const MATCH_LB: u32 = 3;
pub const MASK_LB: u32 = 28799;
pub const MATCH_LH: u32 = 4099;
pub const MASK_LH: u32 = 28799;
pub const MATCH_LW: u32 = 8195;
pub const MASK_LW: u32 = 28799;
pub const MATCH_LBU: u32 = 16387;
pub const MASK_LBU: u32 = 28799;
pub const MATCH_LHU: u32 = 20483;
pub const MASK_LHU: u32 = 28799;
pub const MATCH_SB: u32 = 35;
pub const MASK_SB: u32 = 28799;
pub const MATCH_SH: u32 = 4131;
pub const MASK_SH: u32 = 28799;
pub const MATCH_SW: u32 = 8227;
pub const MASK_SW: u32 = 28799;
pub const MATCH_FENCE: u32 = 15;
pub const MASK_FENCE: u32 = 28799;
pub const MATCH_FENCE_I: u32 = 4111;
pub const MASK_FENCE_I: u32 = 28799;
pub const MATCH_ADDIW: u32 = 27;
pub const MASK_ADDIW: u32 = 28799;
pub const MATCH_SLLIW: u32 = 4123;
pub const MASK_SLLIW: u32 = 4261441663;
pub const MATCH_SRLIW: u32 = 20507;
pub const MASK_SRLIW: u32 = 4261441663;
pub const MATCH_SRAIW: u32 = 1073762331;
pub const MASK_SRAIW: u32 = 4261441663;
pub const MATCH_ADDW: u32 = 59;
pub const MASK_ADDW: u32 = 4261441663;
pub const MATCH_SUBW: u32 = 1073741883;
pub const MASK_SUBW: u32 = 4261441663;
pub const MATCH_SLLW: u32 = 4155;
pub const MASK_SLLW: u32 = 4261441663;
pub const MATCH_SRLW: u32 = 20539;
pub const MASK_SRLW: u32 = 4261441663;
pub const MATCH_SRAW: u32 = 1073762363;
pub const MASK_SRAW: u32 = 4261441663;
pub const MATCH_LD: u32 = 12291;
pub const MASK_LD: u32 = 28799;
pub const MATCH_LWU: u32 = 24579;
pub const MASK_LWU: u32 = 28799;
pub const MATCH_SD: u32 = 12323;
pub const MASK_SD: u32 = 28799;
pub const MATCH_MUL: u32 = 33554483;
pub const MASK_MUL: u32 = 4261441663;
pub const MATCH_MULH: u32 = 33558579;
pub const MASK_MULH: u32 = 4261441663;
pub const MATCH_MULHSU: u32 = 33562675;
pub const MASK_MULHSU: u32 = 4261441663;
pub const MATCH_MULHU: u32 = 33566771;
pub const MASK_MULHU: u32 = 4261441663;
pub const MATCH_DIV: u32 = 33570867;
pub const MASK_DIV: u32 = 4261441663;
pub const MATCH_DIVU: u32 = 33574963;
pub const MASK_DIVU: u32 = 4261441663;
pub const MATCH_REM: u32 = 33579059;
pub const MASK_REM: u32 = 4261441663;
pub const MATCH_REMU: u32 = 33583155;
pub const MASK_REMU: u32 = 4261441663;
pub const MATCH_MULW: u32 = 33554491;
pub const MASK_MULW: u32 = 4261441663;
pub const MATCH_DIVW: u32 = 33570875;
pub const MASK_DIVW: u32 = 4261441663;
pub const MATCH_DIVUW: u32 = 33574971;
pub const MASK_DIVUW: u32 = 4261441663;
pub const MATCH_REMW: u32 = 33579067;
pub const MASK_REMW: u32 = 4261441663;
pub const MATCH_REMUW: u32 = 33583163;
pub const MASK_REMUW: u32 = 4261441663;
pub const MATCH_AMOADD_W: u32 = 8239;
pub const MASK_AMOADD_W: u32 = 4160778367;
pub const MATCH_AMOXOR_W: u32 = 536879151;
pub const MASK_AMOXOR_W: u32 = 4160778367;
pub const MATCH_AMOOR_W: u32 = 1073750063;
pub const MASK_AMOOR_W: u32 = 4160778367;
pub const MATCH_AMOAND_W: u32 = 1610620975;
pub const MASK_AMOAND_W: u32 = 4160778367;
pub const MATCH_AMOMIN_W: u32 = 2147491887;
pub const MASK_AMOMIN_W: u32 = 4160778367;
pub const MATCH_AMOMAX_W: u32 = 2684362799;
pub const MASK_AMOMAX_W: u32 = 4160778367;
pub const MATCH_AMOMINU_W: u32 = 3221233711;
pub const MASK_AMOMINU_W: u32 = 4160778367;
pub const MATCH_AMOMAXU_W: u32 = 3758104623;
pub const MASK_AMOMAXU_W: u32 = 4160778367;
pub const MATCH_AMOSWAP_W: u32 = 134225967;
pub const MASK_AMOSWAP_W: u32 = 4160778367;
pub const MATCH_LR_W: u32 = 268443695;
pub const MASK_LR_W: u32 = 4193284223;
pub const MATCH_SC_W: u32 = 402661423;
pub const MASK_SC_W: u32 = 4160778367;
pub const MATCH_AMOADD_D: u32 = 12335;
pub const MASK_AMOADD_D: u32 = 4160778367;
pub const MATCH_AMOXOR_D: u32 = 536883247;
pub const MASK_AMOXOR_D: u32 = 4160778367;
pub const MATCH_AMOOR_D: u32 = 1073754159;
pub const MASK_AMOOR_D: u32 = 4160778367;
pub const MATCH_AMOAND_D: u32 = 1610625071;
pub const MASK_AMOAND_D: u32 = 4160778367;
pub const MATCH_AMOMIN_D: u32 = 2147495983;
pub const MASK_AMOMIN_D: u32 = 4160778367;
pub const MATCH_AMOMAX_D: u32 = 2684366895;
pub const MASK_AMOMAX_D: u32 = 4160778367;
pub const MATCH_AMOMINU_D: u32 = 3221237807;
pub const MASK_AMOMINU_D: u32 = 4160778367;
pub const MATCH_AMOMAXU_D: u32 = 3758108719;
pub const MASK_AMOMAXU_D: u32 = 4160778367;
pub const MATCH_AMOSWAP_D: u32 = 134230063;
pub const MASK_AMOSWAP_D: u32 = 4160778367;
pub const MATCH_LR_D: u32 = 268447791;
pub const MASK_LR_D: u32 = 4193284223;
pub const MATCH_SC_D: u32 = 402665519;
pub const MASK_SC_D: u32 = 4160778367;
pub const MATCH_FADD_S: u32 = 83;
pub const MASK_FADD_S: u32 = 4261412991;
pub const MATCH_FSUB_S: u32 = 134217811;
pub const MASK_FSUB_S: u32 = 4261412991;
pub const MATCH_FMUL_S: u32 = 268435539;
pub const MASK_FMUL_S: u32 = 4261412991;
pub const MATCH_FDIV_S: u32 = 402653267;
pub const MASK_FDIV_S: u32 = 4261412991;
pub const MATCH_FSGNJ_S: u32 = 536870995;
pub const MASK_FSGNJ_S: u32 = 4261441663;
pub const MATCH_FSGNJN_S: u32 = 536875091;
pub const MASK_FSGNJN_S: u32 = 4261441663;
pub const MATCH_FSGNJX_S: u32 = 536879187;
pub const MASK_FSGNJX_S: u32 = 4261441663;
pub const MATCH_FMIN_S: u32 = 671088723;
pub const MASK_FMIN_S: u32 = 4261441663;
pub const MATCH_FMAX_S: u32 = 671092819;
pub const MASK_FMAX_S: u32 = 4261441663;
pub const MATCH_FSQRT_S: u32 = 1476395091;
pub const MASK_FSQRT_S: u32 = 4293918847;
pub const MATCH_FLE_S: u32 = 2684354643;
pub const MASK_FLE_S: u32 = 4261441663;
pub const MATCH_FLT_S: u32 = 2684358739;
pub const MASK_FLT_S: u32 = 4261441663;
pub const MATCH_FEQ_S: u32 = 2684362835;
pub const MASK_FEQ_S: u32 = 4261441663;
pub const MATCH_FCVT_W_S: u32 = 3221225555;
pub const MASK_FCVT_W_S: u32 = 4293918847;
pub const MATCH_FCVT_WU_S: u32 = 3222274131;
pub const MASK_FCVT_WU_S: u32 = 4293918847;
pub const MATCH_FMV_X_W: u32 = 3758096467;
pub const MASK_FMV_X_W: u32 = 4293947519;
pub const MATCH_FCLASS_S: u32 = 3758100563;
pub const MASK_FCLASS_S: u32 = 4293947519;
pub const MATCH_FCVT_S_W: u32 = 3489661011;
pub const MASK_FCVT_S_W: u32 = 4293918847;
pub const MATCH_FCVT_S_WU: u32 = 3490709587;
pub const MASK_FCVT_S_WU: u32 = 4293918847;
pub const MATCH_FMV_W_X: u32 = 4026531923;
pub const MASK_FMV_W_X: u32 = 4293947519;
pub const MATCH_FLW: u32 = 8199;
pub const MASK_FLW: u32 = 28799;
pub const MATCH_FSW: u32 = 8231;
pub const MASK_FSW: u32 = 28799;
pub const MATCH_FMADD_S: u32 = 67;
pub const MASK_FMADD_S: u32 = 100663423;
pub const MATCH_FMSUB_S: u32 = 71;
pub const MASK_FMSUB_S: u32 = 100663423;
pub const MATCH_FNMSUB_S: u32 = 75;
pub const MASK_FNMSUB_S: u32 = 100663423;
pub const MATCH_FNMADD_S: u32 = 79;
pub const MASK_FNMADD_S: u32 = 100663423;
pub const MATCH_FCVT_L_S: u32 = 3223322707;
pub const MASK_FCVT_L_S: u32 = 4293918847;
pub const MATCH_FCVT_LU_S: u32 = 3224371283;
pub const MASK_FCVT_LU_S: u32 = 4293918847;
pub const MATCH_FCVT_S_L: u32 = 3491758163;
pub const MASK_FCVT_S_L: u32 = 4293918847;
pub const MATCH_FCVT_S_LU: u32 = 3492806739;
pub const MASK_FCVT_S_LU: u32 = 4293918847;
pub const MATCH_FADD_D: u32 = 33554515;
pub const MASK_FADD_D: u32 = 4261412991;
pub const MATCH_FSUB_D: u32 = 167772243;
pub const MASK_FSUB_D: u32 = 4261412991;
pub const MATCH_FMUL_D: u32 = 301989971;
pub const MASK_FMUL_D: u32 = 4261412991;
pub const MATCH_FDIV_D: u32 = 436207699;
pub const MASK_FDIV_D: u32 = 4261412991;
pub const MATCH_FSGNJ_D: u32 = 570425427;
pub const MASK_FSGNJ_D: u32 = 4261441663;
pub const MATCH_FSGNJN_D: u32 = 570429523;
pub const MASK_FSGNJN_D: u32 = 4261441663;
pub const MATCH_FSGNJX_D: u32 = 570433619;
pub const MASK_FSGNJX_D: u32 = 4261441663;
pub const MATCH_FMIN_D: u32 = 704643155;
pub const MASK_FMIN_D: u32 = 4261441663;
pub const MATCH_FMAX_D: u32 = 704647251;
pub const MASK_FMAX_D: u32 = 4261441663;
pub const MATCH_FCVT_S_D: u32 = 1074790483;
pub const MASK_FCVT_S_D: u32 = 4293918847;
pub const MATCH_FCVT_D_S: u32 = 1107296339;
pub const MASK_FCVT_D_S: u32 = 4293918847;
pub const MATCH_FSQRT_D: u32 = 1509949523;
pub const MASK_FSQRT_D: u32 = 4293918847;
pub const MATCH_FLE_D: u32 = 2717909075;
pub const MASK_FLE_D: u32 = 4261441663;
pub const MATCH_FLT_D: u32 = 2717913171;
pub const MASK_FLT_D: u32 = 4261441663;
pub const MATCH_FEQ_D: u32 = 2717917267;
pub const MASK_FEQ_D: u32 = 4261441663;
pub const MATCH_FCVT_W_D: u32 = 3254779987;
pub const MASK_FCVT_W_D: u32 = 4293918847;
pub const MATCH_FCVT_WU_D: u32 = 3255828563;
pub const MASK_FCVT_WU_D: u32 = 4293918847;
pub const MATCH_FCLASS_D: u32 = 3791654995;
pub const MASK_FCLASS_D: u32 = 4293947519;
pub const MATCH_FCVT_D_W: u32 = 3523215443;
pub const MASK_FCVT_D_W: u32 = 4293918847;
pub const MATCH_FCVT_D_WU: u32 = 3524264019;
pub const MASK_FCVT_D_WU: u32 = 4293918847;
pub const MATCH_FLD: u32 = 12295;
pub const MASK_FLD: u32 = 28799;
pub const MATCH_FSD: u32 = 12327;
pub const MASK_FSD: u32 = 28799;
pub const MATCH_FMADD_D: u32 = 33554499;
pub const MASK_FMADD_D: u32 = 100663423;
pub const MATCH_FMSUB_D: u32 = 33554503;
pub const MASK_FMSUB_D: u32 = 100663423;
pub const MATCH_FNMSUB_D: u32 = 33554507;
pub const MASK_FNMSUB_D: u32 = 100663423;
pub const MATCH_FNMADD_D: u32 = 33554511;
pub const MASK_FNMADD_D: u32 = 100663423;
pub const MATCH_FCVT_L_D: u32 = 3256877139;
pub const MASK_FCVT_L_D: u32 = 4293918847;
pub const MATCH_FCVT_LU_D: u32 = 3257925715;
pub const MASK_FCVT_LU_D: u32 = 4293918847;
pub const MATCH_FMV_X_D: u32 = 3791650899;
pub const MASK_FMV_X_D: u32 = 4293947519;
pub const MATCH_FCVT_D_L: u32 = 3525312595;
pub const MASK_FCVT_D_L: u32 = 4293918847;
pub const MATCH_FCVT_D_LU: u32 = 3526361171;
pub const MASK_FCVT_D_LU: u32 = 4293918847;
pub const MATCH_FMV_D_X: u32 = 4060086355;
pub const MASK_FMV_D_X: u32 = 4293947519;
pub const MATCH_FADD_Q: u32 = 100663379;
pub const MASK_FADD_Q: u32 = 4261412991;
pub const MATCH_FSUB_Q: u32 = 234881107;
pub const MASK_FSUB_Q: u32 = 4261412991;
pub const MATCH_FMUL_Q: u32 = 369098835;
pub const MASK_FMUL_Q: u32 = 4261412991;
pub const MATCH_FDIV_Q: u32 = 503316563;
pub const MASK_FDIV_Q: u32 = 4261412991;
pub const MATCH_FSGNJ_Q: u32 = 637534291;
pub const MASK_FSGNJ_Q: u32 = 4261441663;
pub const MATCH_FSGNJN_Q: u32 = 637538387;
pub const MASK_FSGNJN_Q: u32 = 4261441663;
pub const MATCH_FSGNJX_Q: u32 = 637542483;
pub const MASK_FSGNJX_Q: u32 = 4261441663;
pub const MATCH_FMIN_Q: u32 = 771752019;
pub const MASK_FMIN_Q: u32 = 4261441663;
pub const MATCH_FMAX_Q: u32 = 771756115;
pub const MASK_FMAX_Q: u32 = 4261441663;
pub const MATCH_FCVT_S_Q: u32 = 1076887635;
pub const MASK_FCVT_S_Q: u32 = 4293918847;
pub const MATCH_FCVT_Q_S: u32 = 1174405203;
pub const MASK_FCVT_Q_S: u32 = 4293918847;
pub const MATCH_FCVT_D_Q: u32 = 1110442067;
pub const MASK_FCVT_D_Q: u32 = 4293918847;
pub const MATCH_FCVT_Q_D: u32 = 1175453779;
pub const MASK_FCVT_Q_D: u32 = 4293918847;
pub const MATCH_FSQRT_Q: u32 = 1577058387;
pub const MASK_FSQRT_Q: u32 = 4293918847;
pub const MATCH_FLE_Q: u32 = 2785017939;
pub const MASK_FLE_Q: u32 = 4261441663;
pub const MATCH_FLT_Q: u32 = 2785022035;
pub const MASK_FLT_Q: u32 = 4261441663;
pub const MATCH_FEQ_Q: u32 = 2785026131;
pub const MASK_FEQ_Q: u32 = 4261441663;
pub const MATCH_FCVT_W_Q: u32 = 3321888851;
pub const MASK_FCVT_W_Q: u32 = 4293918847;
pub const MATCH_FCVT_WU_Q: u32 = 3322937427;
pub const MASK_FCVT_WU_Q: u32 = 4293918847;
pub const MATCH_FCLASS_Q: u32 = 3858763859;
pub const MASK_FCLASS_Q: u32 = 4293947519;
pub const MATCH_FCVT_Q_W: u32 = 3590324307;
pub const MASK_FCVT_Q_W: u32 = 4293918847;
pub const MATCH_FCVT_Q_WU: u32 = 3591372883;
pub const MASK_FCVT_Q_WU: u32 = 4293918847;
pub const MATCH_FLQ: u32 = 16391;
pub const MASK_FLQ: u32 = 28799;
pub const MATCH_FSQ: u32 = 16423;
pub const MASK_FSQ: u32 = 28799;
pub const MATCH_FMADD_Q: u32 = 100663363;
pub const MASK_FMADD_Q: u32 = 100663423;
pub const MATCH_FMSUB_Q: u32 = 100663367;
pub const MASK_FMSUB_Q: u32 = 100663423;
pub const MATCH_FNMSUB_Q: u32 = 100663371;
pub const MASK_FNMSUB_Q: u32 = 100663423;
pub const MATCH_FNMADD_Q: u32 = 100663375;
pub const MASK_FNMADD_Q: u32 = 100663423;
pub const MATCH_FCVT_L_Q: u32 = 3323986003;
pub const MASK_FCVT_L_Q: u32 = 4293918847;
pub const MATCH_FCVT_LU_Q: u32 = 3325034579;
pub const MASK_FCVT_LU_Q: u32 = 4293918847;
pub const MATCH_FCVT_Q_L: u32 = 3592421459;
pub const MASK_FCVT_Q_L: u32 = 4293918847;
pub const MATCH_FCVT_Q_LU: u32 = 3593470035;
pub const MASK_FCVT_Q_LU: u32 = 4293918847;
pub const MATCH_FMV_X_Q: u32 = 3858759763;
pub const MASK_FMV_X_Q: u32 = 4293947519;
pub const MATCH_FMV_Q_X: u32 = 4127195219;
pub const MASK_FMV_Q_X: u32 = 4293947519;
pub const MATCH_ECALL: u32 = 115;
pub const MASK_ECALL: u32 = 4294967295;
pub const MATCH_EBREAK: u32 = 1048691;
pub const MASK_EBREAK: u32 = 4294967295;
pub const MATCH_URET: u32 = 2097267;
pub const MASK_URET: u32 = 4294967295;
pub const MATCH_SRET: u32 = 270532723;
pub const MASK_SRET: u32 = 4294967295;
pub const MATCH_MRET: u32 = 807403635;
pub const MASK_MRET: u32 = 4294967295;
pub const MATCH_DRET: u32 = 2065694835;
pub const MASK_DRET: u32 = 4294967295;
pub const MATCH_SFENCE_VMA: u32 = 301990003;
pub const MASK_SFENCE_VMA: u32 = 4261445631;
pub const MATCH_WFI: u32 = 273678451;
pub const MASK_WFI: u32 = 4294967295;
pub const MATCH_CSRRW: u32 = 4211;
pub const MASK_CSRRW: u32 = 28799;
pub const MATCH_CSRRS: u32 = 8307;
pub const MASK_CSRRS: u32 = 28799;
pub const MATCH_CSRRC: u32 = 12403;
pub const MASK_CSRRC: u32 = 28799;
pub const MATCH_CSRRWI: u32 = 20595;
pub const MASK_CSRRWI: u32 = 28799;
pub const MATCH_CSRRSI: u32 = 24691;
pub const MASK_CSRRSI: u32 = 28799;
pub const MATCH_CSRRCI: u32 = 28787;
pub const MASK_CSRRCI: u32 = 28799;
pub const MATCH_HFENCE_VVMA: u32 = 570425459;
pub const MASK_HFENCE_VVMA: u32 = 4261445631;
pub const MATCH_HFENCE_GVMA: u32 = 1644167283;
pub const MASK_HFENCE_GVMA: u32 = 4261445631;
pub const MATCH_C_NOP: u32 = 1;
pub const MASK_C_NOP: u32 = 65535;
pub const MATCH_C_ADDI16SP: u32 = 24833;
pub const MASK_C_ADDI16SP: u32 = 61315;
pub const MATCH_C_JR: u32 = 32770;
pub const MASK_C_JR: u32 = 61567;
pub const MATCH_C_JALR: u32 = 36866;
pub const MASK_C_JALR: u32 = 61567;
pub const MATCH_C_EBREAK: u32 = 36866;
pub const MASK_C_EBREAK: u32 = 65535;
pub const MATCH_C_ADDI4SPN: u32 = 0;
pub const MASK_C_ADDI4SPN: u32 = 57347;
pub const MATCH_C_FLD: u32 = 8192;
pub const MASK_C_FLD: u32 = 57347;
pub const MATCH_C_LW: u32 = 16384;
pub const MASK_C_LW: u32 = 57347;
pub const MATCH_C_FLW: u32 = 24576;
pub const MASK_C_FLW: u32 = 57347;
pub const MATCH_C_FSD: u32 = 40960;
pub const MASK_C_FSD: u32 = 57347;
pub const MATCH_C_SW: u32 = 49152;
pub const MASK_C_SW: u32 = 57347;
pub const MATCH_C_FSW: u32 = 57344;
pub const MASK_C_FSW: u32 = 57347;
pub const MATCH_C_ADDI: u32 = 1;
pub const MASK_C_ADDI: u32 = 57347;
pub const MATCH_C_JAL: u32 = 8193;
pub const MASK_C_JAL: u32 = 57347;
pub const MATCH_C_LI: u32 = 16385;
pub const MASK_C_LI: u32 = 57347;
pub const MATCH_C_LUI: u32 = 24577;
pub const MASK_C_LUI: u32 = 57347;
pub const MATCH_C_SRLI: u32 = 32769;
pub const MASK_C_SRLI: u32 = 60419;
pub const MATCH_C_SRAI: u32 = 33793;
pub const MASK_C_SRAI: u32 = 60419;
pub const MATCH_C_ANDI: u32 = 34817;
pub const MASK_C_ANDI: u32 = 60419;
pub const MATCH_C_SUB: u32 = 35841;
pub const MASK_C_SUB: u32 = 64611;
pub const MATCH_C_XOR: u32 = 35873;
pub const MASK_C_XOR: u32 = 64611;
pub const MATCH_C_OR: u32 = 35905;
pub const MASK_C_OR: u32 = 64611;
pub const MATCH_C_AND: u32 = 35937;
pub const MASK_C_AND: u32 = 64611;
pub const MATCH_C_J: u32 = 40961;
pub const MASK_C_J: u32 = 57347;
pub const MATCH_C_BEQZ: u32 = 49153;
pub const MASK_C_BEQZ: u32 = 57347;
pub const MATCH_C_BNEZ: u32 = 57345;
pub const MASK_C_BNEZ: u32 = 57347;
pub const MATCH_C_SLLI: u32 = 2;
pub const MASK_C_SLLI: u32 = 57347;
pub const MATCH_C_FLDSP: u32 = 8194;
pub const MASK_C_FLDSP: u32 = 57347;
pub const MATCH_C_LWSP: u32 = 16386;
pub const MASK_C_LWSP: u32 = 57347;
pub const MATCH_C_FLWSP: u32 = 24578;
pub const MASK_C_FLWSP: u32 = 57347;
pub const MATCH_C_MV: u32 = 32770;
pub const MASK_C_MV: u32 = 61443;
pub const MATCH_C_ADD: u32 = 36866;
pub const MASK_C_ADD: u32 = 61443;
pub const MATCH_C_FSDSP: u32 = 40962;
pub const MASK_C_FSDSP: u32 = 57347;
pub const MATCH_C_SWSP: u32 = 49154;
pub const MASK_C_SWSP: u32 = 57347;
pub const MATCH_C_FSWSP: u32 = 57346;
pub const MASK_C_FSWSP: u32 = 57347;
pub const MATCH_C_SRLI_RV32: u32 = 32769;
pub const MASK_C_SRLI_RV32: u32 = 64515;
pub const MATCH_C_SRAI_RV32: u32 = 33793;
pub const MASK_C_SRAI_RV32: u32 = 64515;
pub const MATCH_C_SLLI_RV32: u32 = 2;
pub const MASK_C_SLLI_RV32: u32 = 61443;
pub const MATCH_C_LD: u32 = 24576;
pub const MASK_C_LD: u32 = 57347;
pub const MATCH_C_SD: u32 = 57344;
pub const MASK_C_SD: u32 = 57347;
pub const MATCH_C_SUBW: u32 = 39937;
pub const MASK_C_SUBW: u32 = 64611;
pub const MATCH_C_ADDW: u32 = 39969;
pub const MASK_C_ADDW: u32 = 64611;
pub const MATCH_C_ADDIW: u32 = 8193;
pub const MASK_C_ADDIW: u32 = 57347;
pub const MATCH_C_LDSP: u32 = 24578;
pub const MASK_C_LDSP: u32 = 57347;
pub const MATCH_C_SDSP: u32 = 57346;
pub const MASK_C_SDSP: u32 = 57347;
pub const MATCH_C_LQ: u32 = 8192;
pub const MASK_C_LQ: u32 = 57347;
pub const MATCH_C_SQ: u32 = 40960;
pub const MASK_C_SQ: u32 = 57347;
pub const MATCH_C_LQSP: u32 = 8194;
pub const MASK_C_LQSP: u32 = 57347;
pub const MATCH_C_SQSP: u32 = 40962;
pub const MASK_C_SQSP: u32 = 57347;
pub const MATCH_CUSTOM0: u32 = 11;
pub const MASK_CUSTOM0: u32 = 28799;
pub const MATCH_CUSTOM0_RS1: u32 = 8203;
pub const MASK_CUSTOM0_RS1: u32 = 28799;
pub const MATCH_CUSTOM0_RS1_RS2: u32 = 12299;
pub const MASK_CUSTOM0_RS1_RS2: u32 = 28799;
pub const MATCH_CUSTOM0_RD: u32 = 16395;
pub const MASK_CUSTOM0_RD: u32 = 28799;
pub const MATCH_CUSTOM0_RD_RS1: u32 = 24587;
pub const MASK_CUSTOM0_RD_RS1: u32 = 28799;
pub const MATCH_CUSTOM0_RD_RS1_RS2: u32 = 28683;
pub const MASK_CUSTOM0_RD_RS1_RS2: u32 = 28799;
pub const MATCH_CUSTOM1: u32 = 43;
pub const MASK_CUSTOM1: u32 = 28799;
pub const MATCH_CUSTOM1_RS1: u32 = 8235;
pub const MASK_CUSTOM1_RS1: u32 = 28799;
pub const MATCH_CUSTOM1_RS1_RS2: u32 = 12331;
pub const MASK_CUSTOM1_RS1_RS2: u32 = 28799;
pub const MATCH_CUSTOM1_RD: u32 = 16427;
pub const MASK_CUSTOM1_RD: u32 = 28799;
pub const MATCH_CUSTOM1_RD_RS1: u32 = 24619;
pub const MASK_CUSTOM1_RD_RS1: u32 = 28799;
pub const MATCH_CUSTOM1_RD_RS1_RS2: u32 = 28715;
pub const MASK_CUSTOM1_RD_RS1_RS2: u32 = 28799;
pub const MATCH_CUSTOM2: u32 = 91;
pub const MASK_CUSTOM2: u32 = 28799;
pub const MATCH_CUSTOM2_RS1: u32 = 8283;
pub const MASK_CUSTOM2_RS1: u32 = 28799;
pub const MATCH_CUSTOM2_RS1_RS2: u32 = 12379;
pub const MASK_CUSTOM2_RS1_RS2: u32 = 28799;
pub const MATCH_CUSTOM2_RD: u32 = 16475;
pub const MASK_CUSTOM2_RD: u32 = 28799;
pub const MATCH_CUSTOM2_RD_RS1: u32 = 24667;
pub const MASK_CUSTOM2_RD_RS1: u32 = 28799;
pub const MATCH_CUSTOM2_RD_RS1_RS2: u32 = 28763;
pub const MASK_CUSTOM2_RD_RS1_RS2: u32 = 28799;
pub const MATCH_CUSTOM3: u32 = 123;
pub const MASK_CUSTOM3: u32 = 28799;
pub const MATCH_CUSTOM3_RS1: u32 = 8315;
pub const MASK_CUSTOM3_RS1: u32 = 28799;
pub const MATCH_CUSTOM3_RS1_RS2: u32 = 12411;
pub const MASK_CUSTOM3_RS1_RS2: u32 = 28799;
pub const MATCH_CUSTOM3_RD: u32 = 16507;
pub const MASK_CUSTOM3_RD: u32 = 28799;
pub const MATCH_CUSTOM3_RD_RS1: u32 = 24699;
pub const MASK_CUSTOM3_RD_RS1: u32 = 28799;
pub const MATCH_CUSTOM3_RD_RS1_RS2: u32 = 28795;
pub const MASK_CUSTOM3_RD_RS1_RS2: u32 = 28799;
pub const MATCH_VSETVLI: u32 = 28759;
pub const MASK_VSETVLI: u32 = 2147512447;
pub const MATCH_VSETVL: u32 = 2147512407;
pub const MASK_VSETVL: u32 = 4261441663;
pub const MATCH_VLB_V: u32 = 268435463;
pub const MASK_VLB_V: u32 = 502296703;
pub const MATCH_VLH_V: u32 = 268455943;
pub const MASK_VLH_V: u32 = 502296703;
pub const MATCH_VLW_V: u32 = 268460039;
pub const MASK_VLW_V: u32 = 502296703;
pub const MATCH_VLE_V: u32 = 28679;
pub const MASK_VLE_V: u32 = 502296703;
pub const MATCH_VLBU_V: u32 = 7;
pub const MASK_VLBU_V: u32 = 502296703;
pub const MATCH_VLHU_V: u32 = 20487;
pub const MASK_VLHU_V: u32 = 502296703;
pub const MATCH_VLWU_V: u32 = 24583;
pub const MASK_VLWU_V: u32 = 502296703;
pub const MATCH_VSB_V: u32 = 39;
pub const MASK_VSB_V: u32 = 502296703;
pub const MATCH_VSH_V: u32 = 20519;
pub const MASK_VSH_V: u32 = 502296703;
pub const MATCH_VSW_V: u32 = 24615;
pub const MASK_VSW_V: u32 = 502296703;
pub const MATCH_VSE_V: u32 = 28711;
pub const MASK_VSE_V: u32 = 502296703;
pub const MATCH_VLSB_V: u32 = 402653191;
pub const MASK_VLSB_V: u32 = 469790847;
pub const MATCH_VLSH_V: u32 = 402673671;
pub const MASK_VLSH_V: u32 = 469790847;
pub const MATCH_VLSW_V: u32 = 402677767;
pub const MASK_VLSW_V: u32 = 469790847;
pub const MATCH_VLSE_V: u32 = 134246407;
pub const MASK_VLSE_V: u32 = 469790847;
pub const MATCH_VLSBU_V: u32 = 134217735;
pub const MASK_VLSBU_V: u32 = 469790847;
pub const MATCH_VLSHU_V: u32 = 134238215;
pub const MASK_VLSHU_V: u32 = 469790847;
pub const MATCH_VLSWU_V: u32 = 134242311;
pub const MASK_VLSWU_V: u32 = 469790847;
pub const MATCH_VSSB_V: u32 = 134217767;
pub const MASK_VSSB_V: u32 = 469790847;
pub const MATCH_VSSH_V: u32 = 134238247;
pub const MASK_VSSH_V: u32 = 469790847;
pub const MATCH_VSSW_V: u32 = 134242343;
pub const MASK_VSSW_V: u32 = 469790847;
pub const MATCH_VSSE_V: u32 = 134246439;
pub const MASK_VSSE_V: u32 = 469790847;
pub const MATCH_VLXB_V: u32 = 469762055;
pub const MASK_VLXB_V: u32 = 469790847;
pub const MATCH_VLXH_V: u32 = 469782535;
pub const MASK_VLXH_V: u32 = 469790847;
pub const MATCH_VLXW_V: u32 = 469786631;
pub const MASK_VLXW_V: u32 = 469790847;
pub const MATCH_VLXE_V: u32 = 201355271;
pub const MASK_VLXE_V: u32 = 469790847;
pub const MATCH_VLXBU_V: u32 = 201326599;
pub const MASK_VLXBU_V: u32 = 469790847;
pub const MATCH_VLXHU_V: u32 = 201347079;
pub const MASK_VLXHU_V: u32 = 469790847;
pub const MATCH_VLXWU_V: u32 = 201351175;
pub const MASK_VLXWU_V: u32 = 469790847;
pub const MATCH_VSXB_V: u32 = 201326631;
pub const MASK_VSXB_V: u32 = 469790847;
pub const MATCH_VSXH_V: u32 = 201347111;
pub const MASK_VSXH_V: u32 = 469790847;
pub const MATCH_VSXW_V: u32 = 201351207;
pub const MASK_VSXW_V: u32 = 469790847;
pub const MATCH_VSXE_V: u32 = 201355303;
pub const MASK_VSXE_V: u32 = 469790847;
pub const MATCH_VSUXB_V: u32 = 469762087;
pub const MASK_VSUXB_V: u32 = 4227887231;
pub const MATCH_VSUXH_V: u32 = 469782567;
pub const MASK_VSUXH_V: u32 = 4227887231;
pub const MATCH_VSUXW_V: u32 = 469786663;
pub const MASK_VSUXW_V: u32 = 4227887231;
pub const MATCH_VSUXE_V: u32 = 469790759;
pub const MASK_VSUXE_V: u32 = 4227887231;
pub const MATCH_VLBFF_V: u32 = 285212679;
pub const MASK_VLBFF_V: u32 = 502296703;
pub const MATCH_VLHFF_V: u32 = 285233159;
pub const MASK_VLHFF_V: u32 = 502296703;
pub const MATCH_VLWFF_V: u32 = 285237255;
pub const MASK_VLWFF_V: u32 = 502296703;
pub const MATCH_VLEFF_V: u32 = 16805895;
pub const MASK_VLEFF_V: u32 = 502296703;
pub const MATCH_VLBUFF_V: u32 = 16777223;
pub const MASK_VLBUFF_V: u32 = 502296703;
pub const MATCH_VLHUFF_V: u32 = 16797703;
pub const MASK_VLHUFF_V: u32 = 502296703;
pub const MATCH_VLWUFF_V: u32 = 16801799;
pub const MASK_VLWUFF_V: u32 = 502296703;
pub const MATCH_VL1R_V: u32 = 41971719;
pub const MASK_VL1R_V: u32 = 4293947519;
pub const MATCH_VS1R_V: u32 = 41971751;
pub const MASK_VS1R_V: u32 = 4293947519;
pub const MATCH_VFADD_VF: u32 = 20567;
pub const MASK_VFADD_VF: u32 = 4227887231;
pub const MATCH_VFSUB_VF: u32 = 134238295;
pub const MASK_VFSUB_VF: u32 = 4227887231;
pub const MATCH_VFMIN_VF: u32 = 268456023;
pub const MASK_VFMIN_VF: u32 = 4227887231;
pub const MATCH_VFMAX_VF: u32 = 402673751;
pub const MASK_VFMAX_VF: u32 = 4227887231;
pub const MATCH_VFSGNJ_VF: u32 = 536891479;
pub const MASK_VFSGNJ_VF: u32 = 4227887231;
pub const MATCH_VFSGNJN_VF: u32 = 604000343;
pub const MASK_VFSGNJN_VF: u32 = 4227887231;
pub const MATCH_VFSGNJX_VF: u32 = 671109207;
pub const MASK_VFSGNJX_VF: u32 = 4227887231;
pub const MATCH_VFSLIDE1UP_VF: u32 = 939544663;
pub const MASK_VFSLIDE1UP_VF: u32 = 4227887231;
pub const MATCH_VFSLIDE1DOWN_VF: u32 = 1006653527;
pub const MASK_VFSLIDE1DOWN_VF: u32 = 4227887231;
pub const MATCH_VFMV_S_F: u32 = 1107316823;
pub const MASK_VFMV_S_F: u32 = 4293947519;
pub const MATCH_VFMERGE_VFM: u32 = 1543524439;
pub const MASK_VFMERGE_VFM: u32 = 4261441663;
pub const MATCH_VFMV_V_F: u32 = 1577078871;
pub const MASK_VFMV_V_F: u32 = 4293947519;
pub const MATCH_VMFEQ_VF: u32 = 1610633303;
pub const MASK_VMFEQ_VF: u32 = 4227887231;
pub const MATCH_VMFLE_VF: u32 = 1677742167;
pub const MASK_VMFLE_VF: u32 = 4227887231;
pub const MATCH_VMFLT_VF: u32 = 1811959895;
pub const MASK_VMFLT_VF: u32 = 4227887231;
pub const MATCH_VMFNE_VF: u32 = 1879068759;
pub const MASK_VMFNE_VF: u32 = 4227887231;
pub const MATCH_VMFGT_VF: u32 = 1946177623;
pub const MASK_VMFGT_VF: u32 = 4227887231;
pub const MATCH_VMFGE_VF: u32 = 2080395351;
pub const MASK_VMFGE_VF: u32 = 4227887231;
pub const MATCH_VFDIV_VF: u32 = 2147504215;
pub const MASK_VFDIV_VF: u32 = 4227887231;
pub const MATCH_VFRDIV_VF: u32 = 2214613079;
pub const MASK_VFRDIV_VF: u32 = 4227887231;
pub const MATCH_VFMUL_VF: u32 = 2415939671;
pub const MASK_VFMUL_VF: u32 = 4227887231;
pub const MATCH_VFRSUB_VF: u32 = 2617266263;
pub const MASK_VFRSUB_VF: u32 = 4227887231;
pub const MATCH_VFMADD_VF: u32 = 2684375127;
pub const MASK_VFMADD_VF: u32 = 4227887231;
pub const MATCH_VFNMADD_VF: u32 = 2751483991;
pub const MASK_VFNMADD_VF: u32 = 4227887231;
pub const MATCH_VFMSUB_VF: u32 = 2818592855;
pub const MASK_VFMSUB_VF: u32 = 4227887231;
pub const MATCH_VFNMSUB_VF: u32 = 2885701719;
pub const MASK_VFNMSUB_VF: u32 = 4227887231;
pub const MATCH_VFMACC_VF: u32 = 2952810583;
pub const MASK_VFMACC_VF: u32 = 4227887231;
pub const MATCH_VFNMACC_VF: u32 = 3019919447;
pub const MASK_VFNMACC_VF: u32 = 4227887231;
pub const MATCH_VFMSAC_VF: u32 = 3087028311;
pub const MASK_VFMSAC_VF: u32 = 4227887231;
pub const MATCH_VFNMSAC_VF: u32 = 3154137175;
pub const MASK_VFNMSAC_VF: u32 = 4227887231;
pub const MATCH_VFWADD_VF: u32 = 3221246039;
pub const MASK_VFWADD_VF: u32 = 4227887231;
pub const MATCH_VFWSUB_VF: u32 = 3355463767;
pub const MASK_VFWSUB_VF: u32 = 4227887231;
pub const MATCH_VFWADD_WF: u32 = 3489681495;
pub const MASK_VFWADD_WF: u32 = 4227887231;
pub const MATCH_VFWSUB_WF: u32 = 3623899223;
pub const MASK_VFWSUB_WF: u32 = 4227887231;
pub const MATCH_VFWMUL_VF: u32 = 3758116951;
pub const MASK_VFWMUL_VF: u32 = 4227887231;
pub const MATCH_VFWMACC_VF: u32 = 4026552407;
pub const MASK_VFWMACC_VF: u32 = 4227887231;
pub const MATCH_VFWNMACC_VF: u32 = 4093661271;
pub const MASK_VFWNMACC_VF: u32 = 4227887231;
pub const MATCH_VFWMSAC_VF: u32 = 4160770135;
pub const MASK_VFWMSAC_VF: u32 = 4227887231;
pub const MATCH_VFWNMSAC_VF: u32 = 4227878999;
pub const MASK_VFWNMSAC_VF: u32 = 4227887231;
pub const MATCH_VFADD_VV: u32 = 4183;
pub const MASK_VFADD_VV: u32 = 4227887231;
pub const MATCH_VFREDSUM_VS: u32 = 67113047;
pub const MASK_VFREDSUM_VS: u32 = 4227887231;
pub const MATCH_VFSUB_VV: u32 = 134221911;
pub const MASK_VFSUB_VV: u32 = 4227887231;
pub const MATCH_VFREDOSUM_VS: u32 = 201330775;
pub const MASK_VFREDOSUM_VS: u32 = 4227887231;
pub const MATCH_VFMIN_VV: u32 = 268439639;
pub const MASK_VFMIN_VV: u32 = 4227887231;
pub const MATCH_VFREDMIN_VS: u32 = 335548503;
pub const MASK_VFREDMIN_VS: u32 = 4227887231;
pub const MATCH_VFMAX_VV: u32 = 402657367;
pub const MASK_VFMAX_VV: u32 = 4227887231;
pub const MATCH_VFREDMAX_VS: u32 = 469766231;
pub const MASK_VFREDMAX_VS: u32 = 4227887231;
pub const MATCH_VFSGNJ_VV: u32 = 536875095;
pub const MASK_VFSGNJ_VV: u32 = 4227887231;
pub const MATCH_VFSGNJN_VV: u32 = 603983959;
pub const MASK_VFSGNJN_VV: u32 = 4227887231;
pub const MATCH_VFSGNJX_VV: u32 = 671092823;
pub const MASK_VFSGNJX_VV: u32 = 4227887231;
pub const MATCH_VFMV_F_S: u32 = 1107300439;
pub const MASK_VFMV_F_S: u32 = 4262457471;
pub const MATCH_VMFEQ_VV: u32 = 1610616919;
pub const MASK_VMFEQ_VV: u32 = 4227887231;
pub const MATCH_VMFLE_VV: u32 = 1677725783;
pub const MASK_VMFLE_VV: u32 = 4227887231;
pub const MATCH_VMFLT_VV: u32 = 1811943511;
pub const MASK_VMFLT_VV: u32 = 4227887231;
pub const MATCH_VMFNE_VV: u32 = 1879052375;
pub const MASK_VMFNE_VV: u32 = 4227887231;
pub const MATCH_VFDIV_VV: u32 = 2147487831;
pub const MASK_VFDIV_VV: u32 = 4227887231;
pub const MATCH_VFMUL_VV: u32 = 2415923287;
pub const MASK_VFMUL_VV: u32 = 4227887231;
pub const MATCH_VFMADD_VV: u32 = 2684358743;
pub const MASK_VFMADD_VV: u32 = 4227887231;
pub const MATCH_VFNMADD_VV: u32 = 2751467607;
pub const MASK_VFNMADD_VV: u32 = 4227887231;
pub const MATCH_VFMSUB_VV: u32 = 2818576471;
pub const MASK_VFMSUB_VV: u32 = 4227887231;
pub const MATCH_VFNMSUB_VV: u32 = 2885685335;
pub const MASK_VFNMSUB_VV: u32 = 4227887231;
pub const MATCH_VFMACC_VV: u32 = 2952794199;
pub const MASK_VFMACC_VV: u32 = 4227887231;
pub const MATCH_VFNMACC_VV: u32 = 3019903063;
pub const MASK_VFNMACC_VV: u32 = 4227887231;
pub const MATCH_VFMSAC_VV: u32 = 3087011927;
pub const MASK_VFMSAC_VV: u32 = 4227887231;
pub const MATCH_VFNMSAC_VV: u32 = 3154120791;
pub const MASK_VFNMSAC_VV: u32 = 4227887231;
pub const MATCH_VFCVT_XU_F_V: u32 = 2281705559;
pub const MASK_VFCVT_XU_F_V: u32 = 4228903039;
pub const MATCH_VFCVT_X_F_V: u32 = 2281738327;
pub const MASK_VFCVT_X_F_V: u32 = 4228903039;
pub const MATCH_VFCVT_F_XU_V: u32 = 2281771095;
pub const MASK_VFCVT_F_XU_V: u32 = 4228903039;
pub const MATCH_VFCVT_F_X_V: u32 = 2281803863;
pub const MASK_VFCVT_F_X_V: u32 = 4228903039;
pub const MATCH_VFCVT_RTZ_XU_F_V: u32 = 2281902167;
pub const MASK_VFCVT_RTZ_XU_F_V: u32 = 4228903039;
pub const MATCH_VFCVT_RTZ_X_F_V: u32 = 2281934935;
pub const MASK_VFCVT_RTZ_X_F_V: u32 = 4228903039;
pub const MATCH_VFWCVT_XU_F_V: u32 = 2281967703;
pub const MASK_VFWCVT_XU_F_V: u32 = 4228903039;
pub const MATCH_VFWCVT_X_F_V: u32 = 2282000471;
pub const MASK_VFWCVT_X_F_V: u32 = 4228903039;
pub const MATCH_VFWCVT_F_XU_V: u32 = 2282033239;
pub const MASK_VFWCVT_F_XU_V: u32 = 4228903039;
pub const MATCH_VFWCVT_F_X_V: u32 = 2282066007;
pub const MASK_VFWCVT_F_X_V: u32 = 4228903039;
pub const MATCH_VFWCVT_F_F_V: u32 = 2282098775;
pub const MASK_VFWCVT_F_F_V: u32 = 4228903039;
pub const MATCH_VFWCVT_RTZ_XU_F_V: u32 = 2282164311;
pub const MASK_VFWCVT_RTZ_XU_F_V: u32 = 4228903039;
pub const MATCH_VFWCVT_RTZ_X_F_V: u32 = 2282197079;
pub const MASK_VFWCVT_RTZ_X_F_V: u32 = 4228903039;
pub const MATCH_VFNCVT_XU_F_W: u32 = 2282229847;
pub const MASK_VFNCVT_XU_F_W: u32 = 4228903039;
pub const MATCH_VFNCVT_X_F_W: u32 = 2282262615;
pub const MASK_VFNCVT_X_F_W: u32 = 4228903039;
pub const MATCH_VFNCVT_F_XU_W: u32 = 2282295383;
pub const MASK_VFNCVT_F_XU_W: u32 = 4228903039;
pub const MATCH_VFNCVT_F_X_W: u32 = 2282328151;
pub const MASK_VFNCVT_F_X_W: u32 = 4228903039;
pub const MATCH_VFNCVT_F_F_W: u32 = 2282360919;
pub const MASK_VFNCVT_F_F_W: u32 = 4228903039;
pub const MATCH_VFNCVT_ROD_F_F_W: u32 = 2282393687;
pub const MASK_VFNCVT_ROD_F_F_W: u32 = 4228903039;
pub const MATCH_VFNCVT_RTZ_XU_F_W: u32 = 2282426455;
pub const MASK_VFNCVT_RTZ_XU_F_W: u32 = 4228903039;
pub const MATCH_VFNCVT_RTZ_X_F_W: u32 = 2282459223;
pub const MASK_VFNCVT_RTZ_X_F_W: u32 = 4228903039;
pub const MATCH_VFSQRT_V: u32 = 2348814423;
pub const MASK_VFSQRT_V: u32 = 4228903039;
pub const MATCH_VFCLASS_V: u32 = 2349338711;
pub const MASK_VFCLASS_V: u32 = 4228903039;
pub const MATCH_VFWADD_VV: u32 = 3221229655;
pub const MASK_VFWADD_VV: u32 = 4227887231;
pub const MATCH_VFWREDSUM_VS: u32 = 3288338519;
pub const MASK_VFWREDSUM_VS: u32 = 4227887231;
pub const MATCH_VFWSUB_VV: u32 = 3355447383;
pub const MASK_VFWSUB_VV: u32 = 4227887231;
pub const MATCH_VFWREDOSUM_VS: u32 = 3422556247;
pub const MASK_VFWREDOSUM_VS: u32 = 4227887231;
pub const MATCH_VFWADD_WV: u32 = 3489665111;
pub const MASK_VFWADD_WV: u32 = 4227887231;
pub const MATCH_VFWSUB_WV: u32 = 3623882839;
pub const MASK_VFWSUB_WV: u32 = 4227887231;
pub const MATCH_VFWMUL_VV: u32 = 3758100567;
pub const MASK_VFWMUL_VV: u32 = 4227887231;
pub const MATCH_VFDOT_VV: u32 = 3825209431;
pub const MASK_VFDOT_VV: u32 = 4227887231;
pub const MATCH_VFWMACC_VV: u32 = 4026536023;
pub const MASK_VFWMACC_VV: u32 = 4227887231;
pub const MATCH_VFWNMACC_VV: u32 = 4093644887;
pub const MASK_VFWNMACC_VV: u32 = 4227887231;
pub const MATCH_VFWMSAC_VV: u32 = 4160753751;
pub const MASK_VFWMSAC_VV: u32 = 4227887231;
pub const MATCH_VFWNMSAC_VV: u32 = 4227862615;
pub const MASK_VFWNMSAC_VV: u32 = 4227887231;
pub const MATCH_VADD_VX: u32 = 16471;
pub const MASK_VADD_VX: u32 = 4227887231;
pub const MATCH_VSUB_VX: u32 = 134234199;
pub const MASK_VSUB_VX: u32 = 4227887231;
pub const MATCH_VRSUB_VX: u32 = 201343063;
pub const MASK_VRSUB_VX: u32 = 4227887231;
pub const MATCH_VMINU_VX: u32 = 268451927;
pub const MASK_VMINU_VX: u32 = 4227887231;
pub const MATCH_VMIN_VX: u32 = 335560791;
pub const MASK_VMIN_VX: u32 = 4227887231;
pub const MATCH_VMAXU_VX: u32 = 402669655;
pub const MASK_VMAXU_VX: u32 = 4227887231;
pub const MATCH_VMAX_VX: u32 = 469778519;
pub const MASK_VMAX_VX: u32 = 4227887231;
pub const MATCH_VAND_VX: u32 = 603996247;
pub const MASK_VAND_VX: u32 = 4227887231;
pub const MATCH_VOR_VX: u32 = 671105111;
pub const MASK_VOR_VX: u32 = 4227887231;
pub const MATCH_VXOR_VX: u32 = 738213975;
pub const MASK_VXOR_VX: u32 = 4227887231;
pub const MATCH_VRGATHER_VX: u32 = 805322839;
pub const MASK_VRGATHER_VX: u32 = 4227887231;
pub const MATCH_VSLIDEUP_VX: u32 = 939540567;
pub const MASK_VSLIDEUP_VX: u32 = 4227887231;
pub const MATCH_VSLIDEDOWN_VX: u32 = 1006649431;
pub const MASK_VSLIDEDOWN_VX: u32 = 4227887231;
pub const MATCH_VADC_VXM: u32 = 1073758295;
pub const MASK_VADC_VXM: u32 = 4261441663;
pub const MATCH_VMADC_VXM: u32 = 1140867159;
pub const MASK_VMADC_VXM: u32 = 4227887231;
pub const MATCH_VSBC_VXM: u32 = 1207976023;
pub const MASK_VSBC_VXM: u32 = 4261441663;
pub const MATCH_VMSBC_VXM: u32 = 1275084887;
pub const MASK_VMSBC_VXM: u32 = 4227887231;
pub const MATCH_VMERGE_VXM: u32 = 1543520343;
pub const MASK_VMERGE_VXM: u32 = 4261441663;
pub const MATCH_VMV_V_X: u32 = 1577074775;
pub const MASK_VMV_V_X: u32 = 4293947519;
pub const MATCH_VMSEQ_VX: u32 = 1610629207;
pub const MASK_VMSEQ_VX: u32 = 4227887231;
pub const MATCH_VMSNE_VX: u32 = 1677738071;
pub const MASK_VMSNE_VX: u32 = 4227887231;
pub const MATCH_VMSLTU_VX: u32 = 1744846935;
pub const MASK_VMSLTU_VX: u32 = 4227887231;
pub const MATCH_VMSLT_VX: u32 = 1811955799;
pub const MASK_VMSLT_VX: u32 = 4227887231;
pub const MATCH_VMSLEU_VX: u32 = 1879064663;
pub const MASK_VMSLEU_VX: u32 = 4227887231;
pub const MATCH_VMSLE_VX: u32 = 1946173527;
pub const MASK_VMSLE_VX: u32 = 4227887231;
pub const MATCH_VMSGTU_VX: u32 = 2013282391;
pub const MASK_VMSGTU_VX: u32 = 4227887231;
pub const MATCH_VMSGT_VX: u32 = 2080391255;
pub const MASK_VMSGT_VX: u32 = 4227887231;
pub const MATCH_VSADDU_VX: u32 = 2147500119;
pub const MASK_VSADDU_VX: u32 = 4227887231;
pub const MATCH_VSADD_VX: u32 = 2214608983;
pub const MASK_VSADD_VX: u32 = 4227887231;
pub const MATCH_VSSUBU_VX: u32 = 2281717847;
pub const MASK_VSSUBU_VX: u32 = 4227887231;
pub const MATCH_VSSUB_VX: u32 = 2348826711;
pub const MASK_VSSUB_VX: u32 = 4227887231;
pub const MATCH_VSLL_VX: u32 = 2483044439;
pub const MASK_VSLL_VX: u32 = 4227887231;
pub const MATCH_VSMUL_VX: u32 = 2617262167;
pub const MASK_VSMUL_VX: u32 = 4227887231;
pub const MATCH_VSRL_VX: u32 = 2684371031;
pub const MASK_VSRL_VX: u32 = 4227887231;
pub const MATCH_VSRA_VX: u32 = 2751479895;
pub const MASK_VSRA_VX: u32 = 4227887231;
pub const MATCH_VSSRL_VX: u32 = 2818588759;
pub const MASK_VSSRL_VX: u32 = 4227887231;
pub const MATCH_VSSRA_VX: u32 = 2885697623;
pub const MASK_VSSRA_VX: u32 = 4227887231;
pub const MATCH_VNSRL_WX: u32 = 2952806487;
pub const MASK_VNSRL_WX: u32 = 4227887231;
pub const MATCH_VNSRA_WX: u32 = 3019915351;
pub const MASK_VNSRA_WX: u32 = 4227887231;
pub const MATCH_VNCLIPU_WX: u32 = 3087024215;
pub const MASK_VNCLIPU_WX: u32 = 4227887231;
pub const MATCH_VNCLIP_WX: u32 = 3154133079;
pub const MASK_VNCLIP_WX: u32 = 4227887231;
pub const MATCH_VQMACCU_VX: u32 = 4026548311;
pub const MASK_VQMACCU_VX: u32 = 4227887231;
pub const MATCH_VQMACC_VX: u32 = 4093657175;
pub const MASK_VQMACC_VX: u32 = 4227887231;
pub const MATCH_VQMACCUS_VX: u32 = 4160766039;
pub const MASK_VQMACCUS_VX: u32 = 4227887231;
pub const MATCH_VQMACCSU_VX: u32 = 4227874903;
pub const MASK_VQMACCSU_VX: u32 = 4227887231;
pub const MATCH_VADD_VV: u32 = 87;
pub const MASK_VADD_VV: u32 = 4227887231;
pub const MATCH_VSUB_VV: u32 = 134217815;
pub const MASK_VSUB_VV: u32 = 4227887231;
pub const MATCH_VMINU_VV: u32 = 268435543;
pub const MASK_VMINU_VV: u32 = 4227887231;
pub const MATCH_VMIN_VV: u32 = 335544407;
pub const MASK_VMIN_VV: u32 = 4227887231;
pub const MATCH_VMAXU_VV: u32 = 402653271;
pub const MASK_VMAXU_VV: u32 = 4227887231;
pub const MATCH_VMAX_VV: u32 = 469762135;
pub const MASK_VMAX_VV: u32 = 4227887231;
pub const MATCH_VAND_VV: u32 = 603979863;
pub const MASK_VAND_VV: u32 = 4227887231;
pub const MATCH_VOR_VV: u32 = 671088727;
pub const MASK_VOR_VV: u32 = 4227887231;
pub const MATCH_VXOR_VV: u32 = 738197591;
pub const MASK_VXOR_VV: u32 = 4227887231;
pub const MATCH_VRGATHER_VV: u32 = 805306455;
pub const MASK_VRGATHER_VV: u32 = 4227887231;
pub const MATCH_VADC_VVM: u32 = 1073741911;
pub const MASK_VADC_VVM: u32 = 4261441663;
pub const MATCH_VMADC_VVM: u32 = 1140850775;
pub const MASK_VMADC_VVM: u32 = 4227887231;
pub const MATCH_VSBC_VVM: u32 = 1207959639;
pub const MASK_VSBC_VVM: u32 = 4261441663;
pub const MATCH_VMSBC_VVM: u32 = 1275068503;
pub const MASK_VMSBC_VVM: u32 = 4227887231;
pub const MATCH_VMERGE_VVM: u32 = 1543503959;
pub const MASK_VMERGE_VVM: u32 = 4261441663;
pub const MATCH_VMV_V_V: u32 = 1577058391;
pub const MASK_VMV_V_V: u32 = 4293947519;
pub const MATCH_VMSEQ_VV: u32 = 1610612823;
pub const MASK_VMSEQ_VV: u32 = 4227887231;
pub const MATCH_VMSNE_VV: u32 = 1677721687;
pub const MASK_VMSNE_VV: u32 = 4227887231;
pub const MATCH_VMSLTU_VV: u32 = 1744830551;
pub const MASK_VMSLTU_VV: u32 = 4227887231;
pub const MATCH_VMSLT_VV: u32 = 1811939415;
pub const MASK_VMSLT_VV: u32 = 4227887231;
pub const MATCH_VMSLEU_VV: u32 = 1879048279;
pub const MASK_VMSLEU_VV: u32 = 4227887231;
pub const MATCH_VMSLE_VV: u32 = 1946157143;
pub const MASK_VMSLE_VV: u32 = 4227887231;
pub const MATCH_VSADDU_VV: u32 = 2147483735;
pub const MASK_VSADDU_VV: u32 = 4227887231;
pub const MATCH_VSADD_VV: u32 = 2214592599;
pub const MASK_VSADD_VV: u32 = 4227887231;
pub const MATCH_VSSUBU_VV: u32 = 2281701463;
pub const MASK_VSSUBU_VV: u32 = 4227887231;
pub const MATCH_VSSUB_VV: u32 = 2348810327;
pub const MASK_VSSUB_VV: u32 = 4227887231;
pub const MATCH_VSLL_VV: u32 = 2483028055;
pub const MASK_VSLL_VV: u32 = 4227887231;
pub const MATCH_VSMUL_VV: u32 = 2617245783;
pub const MASK_VSMUL_VV: u32 = 4227887231;
pub const MATCH_VSRL_VV: u32 = 2684354647;
pub const MASK_VSRL_VV: u32 = 4227887231;
pub const MATCH_VSRA_VV: u32 = 2751463511;
pub const MASK_VSRA_VV: u32 = 4227887231;
pub const MATCH_VSSRL_VV: u32 = 2818572375;
pub const MASK_VSSRL_VV: u32 = 4227887231;
pub const MATCH_VSSRA_VV: u32 = 2885681239;
pub const MASK_VSSRA_VV: u32 = 4227887231;
pub const MATCH_VNSRL_WV: u32 = 2952790103;
pub const MASK_VNSRL_WV: u32 = 4227887231;
pub const MATCH_VNSRA_WV: u32 = 3019898967;
pub const MASK_VNSRA_WV: u32 = 4227887231;
pub const MATCH_VNCLIPU_WV: u32 = 3087007831;
pub const MASK_VNCLIPU_WV: u32 = 4227887231;
pub const MATCH_VNCLIP_WV: u32 = 3154116695;
pub const MASK_VNCLIP_WV: u32 = 4227887231;
pub const MATCH_VWREDSUMU_VS: u32 = 3221225559;
pub const MASK_VWREDSUMU_VS: u32 = 4227887231;
pub const MATCH_VWREDSUM_VS: u32 = 3288334423;
pub const MASK_VWREDSUM_VS: u32 = 4227887231;
pub const MATCH_VDOTU_VV: u32 = 3758096471;
pub const MASK_VDOTU_VV: u32 = 4227887231;
pub const MATCH_VDOT_VV: u32 = 3825205335;
pub const MASK_VDOT_VV: u32 = 4227887231;
pub const MATCH_VQMACCU_VV: u32 = 4026531927;
pub const MASK_VQMACCU_VV: u32 = 4227887231;
pub const MATCH_VQMACC_VV: u32 = 4093640791;
pub const MASK_VQMACC_VV: u32 = 4227887231;
pub const MATCH_VQMACCSU_VV: u32 = 4227858519;
pub const MASK_VQMACCSU_VV: u32 = 4227887231;
pub const MATCH_VADD_VI: u32 = 12375;
pub const MASK_VADD_VI: u32 = 4227887231;
pub const MATCH_VRSUB_VI: u32 = 201338967;
pub const MASK_VRSUB_VI: u32 = 4227887231;
pub const MATCH_VAND_VI: u32 = 603992151;
pub const MASK_VAND_VI: u32 = 4227887231;
pub const MATCH_VOR_VI: u32 = 671101015;
pub const MASK_VOR_VI: u32 = 4227887231;
pub const MATCH_VXOR_VI: u32 = 738209879;
pub const MASK_VXOR_VI: u32 = 4227887231;
pub const MATCH_VRGATHER_VI: u32 = 805318743;
pub const MASK_VRGATHER_VI: u32 = 4227887231;
pub const MATCH_VSLIDEUP_VI: u32 = 939536471;
pub const MASK_VSLIDEUP_VI: u32 = 4227887231;
pub const MATCH_VSLIDEDOWN_VI: u32 = 1006645335;
pub const MASK_VSLIDEDOWN_VI: u32 = 4227887231;
pub const MATCH_VADC_VIM: u32 = 1073754199;
pub const MASK_VADC_VIM: u32 = 4261441663;
pub const MATCH_VMADC_VIM: u32 = 1140863063;
pub const MASK_VMADC_VIM: u32 = 4227887231;
pub const MATCH_VMERGE_VIM: u32 = 1543516247;
pub const MASK_VMERGE_VIM: u32 = 4261441663;
pub const MATCH_VMV_V_I: u32 = 1577070679;
pub const MASK_VMV_V_I: u32 = 4293947519;
pub const MATCH_VMSEQ_VI: u32 = 1610625111;
pub const MASK_VMSEQ_VI: u32 = 4227887231;
pub const MATCH_VMSNE_VI: u32 = 1677733975;
pub const MASK_VMSNE_VI: u32 = 4227887231;
pub const MATCH_VMSLEU_VI: u32 = 1879060567;
pub const MASK_VMSLEU_VI: u32 = 4227887231;
pub const MATCH_VMSLE_VI: u32 = 1946169431;
pub const MASK_VMSLE_VI: u32 = 4227887231;
pub const MATCH_VMSGTU_VI: u32 = 2013278295;
pub const MASK_VMSGTU_VI: u32 = 4227887231;
pub const MATCH_VMSGT_VI: u32 = 2080387159;
pub const MASK_VMSGT_VI: u32 = 4227887231;
pub const MATCH_VSADDU_VI: u32 = 2147496023;
pub const MASK_VSADDU_VI: u32 = 4227887231;
pub const MATCH_VSADD_VI: u32 = 2214604887;
pub const MASK_VSADD_VI: u32 = 4227887231;
pub const MATCH_VSLL_VI: u32 = 2483040343;
pub const MASK_VSLL_VI: u32 = 4227887231;
pub const MATCH_VMV1R_V: u32 = 2650812503;
pub const MASK_VMV1R_V: u32 = 4262457471;
pub const MATCH_VMV2R_V: u32 = 2650845271;
pub const MASK_VMV2R_V: u32 = 4262457471;
pub const MATCH_VMV4R_V: u32 = 2650910807;
pub const MASK_VMV4R_V: u32 = 4262457471;
pub const MATCH_VMV8R_V: u32 = 2651041879;
pub const MASK_VMV8R_V: u32 = 4262457471;
pub const MATCH_VSRL_VI: u32 = 2684366935;
pub const MASK_VSRL_VI: u32 = 4227887231;
pub const MATCH_VSRA_VI: u32 = 2751475799;
pub const MASK_VSRA_VI: u32 = 4227887231;
pub const MATCH_VSSRL_VI: u32 = 2818584663;
pub const MASK_VSSRL_VI: u32 = 4227887231;
pub const MATCH_VSSRA_VI: u32 = 2885693527;
pub const MASK_VSSRA_VI: u32 = 4227887231;
pub const MATCH_VNSRL_WI: u32 = 2952802391;
pub const MASK_VNSRL_WI: u32 = 4227887231;
pub const MATCH_VNSRA_WI: u32 = 3019911255;
pub const MASK_VNSRA_WI: u32 = 4227887231;
pub const MATCH_VNCLIPU_WI: u32 = 3087020119;
pub const MASK_VNCLIPU_WI: u32 = 4227887231;
pub const MATCH_VNCLIP_WI: u32 = 3154128983;
pub const MASK_VNCLIP_WI: u32 = 4227887231;
pub const MATCH_VREDSUM_VS: u32 = 8279;
pub const MASK_VREDSUM_VS: u32 = 4227887231;
pub const MATCH_VREDAND_VS: u32 = 67117143;
pub const MASK_VREDAND_VS: u32 = 4227887231;
pub const MATCH_VREDOR_VS: u32 = 134226007;
pub const MASK_VREDOR_VS: u32 = 4227887231;
pub const MATCH_VREDXOR_VS: u32 = 201334871;
pub const MASK_VREDXOR_VS: u32 = 4227887231;
pub const MATCH_VREDMINU_VS: u32 = 268443735;
pub const MASK_VREDMINU_VS: u32 = 4227887231;
pub const MATCH_VREDMIN_VS: u32 = 335552599;
pub const MASK_VREDMIN_VS: u32 = 4227887231;
pub const MATCH_VREDMAXU_VS: u32 = 402661463;
pub const MASK_VREDMAXU_VS: u32 = 4227887231;
pub const MATCH_VREDMAX_VS: u32 = 469770327;
pub const MASK_VREDMAX_VS: u32 = 4227887231;
pub const MATCH_VAADDU_VV: u32 = 536879191;
pub const MASK_VAADDU_VV: u32 = 4227887231;
pub const MATCH_VAADD_VV: u32 = 603988055;
pub const MASK_VAADD_VV: u32 = 4227887231;
pub const MATCH_VASUBU_VV: u32 = 671096919;
pub const MASK_VASUBU_VV: u32 = 4227887231;
pub const MATCH_VASUB_VV: u32 = 738205783;
pub const MASK_VASUB_VV: u32 = 4227887231;
pub const MATCH_VMV_X_S: u32 = 1107304535;
pub const MASK_VMV_X_S: u32 = 4262457471;
pub const MATCH_VCOMPRESS_VM: u32 = 1577066583;
pub const MASK_VCOMPRESS_VM: u32 = 4261441663;
pub const MATCH_VMANDNOT_MM: u32 = 1610621015;
pub const MASK_VMANDNOT_MM: u32 = 4227887231;
pub const MATCH_VMAND_MM: u32 = 1677729879;
pub const MASK_VMAND_MM: u32 = 4227887231;
pub const MATCH_VMOR_MM: u32 = 1744838743;
pub const MASK_VMOR_MM: u32 = 4227887231;
pub const MATCH_VMXOR_MM: u32 = 1811947607;
pub const MASK_VMXOR_MM: u32 = 4227887231;
pub const MATCH_VMORNOT_MM: u32 = 1879056471;
pub const MASK_VMORNOT_MM: u32 = 4227887231;
pub const MATCH_VMNAND_MM: u32 = 1946165335;
pub const MASK_VMNAND_MM: u32 = 4227887231;
pub const MATCH_VMNOR_MM: u32 = 2013274199;
pub const MASK_VMNOR_MM: u32 = 4227887231;
pub const MATCH_VMXNOR_MM: u32 = 2080383063;
pub const MASK_VMXNOR_MM: u32 = 4227887231;
pub const MATCH_VMSBF_M: u32 = 1342218327;
pub const MASK_VMSBF_M: u32 = 4228903039;
pub const MATCH_VMSOF_M: u32 = 1342251095;
pub const MASK_VMSOF_M: u32 = 4228903039;
pub const MATCH_VMSIF_M: u32 = 1342283863;
pub const MASK_VMSIF_M: u32 = 4228903039;
pub const MATCH_VIOTA_M: u32 = 1342709847;
pub const MASK_VIOTA_M: u32 = 4228903039;
pub const MATCH_VID_V: u32 = 1342742615;
pub const MASK_VID_V: u32 = 4261408895;
pub const MATCH_VPOPC_M: u32 = 1074274391;
pub const MASK_VPOPC_M: u32 = 4228903039;
pub const MATCH_VFIRST_M: u32 = 1074307159;
pub const MASK_VFIRST_M: u32 = 4228903039;
pub const MATCH_VDIVU_VV: u32 = 2147491927;
pub const MASK_VDIVU_VV: u32 = 4227887231;
pub const MATCH_VDIV_VV: u32 = 2214600791;
pub const MASK_VDIV_VV: u32 = 4227887231;
pub const MATCH_VREMU_VV: u32 = 2281709655;
pub const MASK_VREMU_VV: u32 = 4227887231;
pub const MATCH_VREM_VV: u32 = 2348818519;
pub const MASK_VREM_VV: u32 = 4227887231;
pub const MATCH_VMULHU_VV: u32 = 2415927383;
pub const MASK_VMULHU_VV: u32 = 4227887231;
pub const MATCH_VMUL_VV: u32 = 2483036247;
pub const MASK_VMUL_VV: u32 = 4227887231;
pub const MATCH_VMULHSU_VV: u32 = 2550145111;
pub const MASK_VMULHSU_VV: u32 = 4227887231;
pub const MATCH_VMULH_VV: u32 = 2617253975;
pub const MASK_VMULH_VV: u32 = 4227887231;
pub const MATCH_VMADD_VV: u32 = 2751471703;
pub const MASK_VMADD_VV: u32 = 4227887231;
pub const MATCH_VNMSUB_VV: u32 = 2885689431;
pub const MASK_VNMSUB_VV: u32 = 4227887231;
pub const MATCH_VMACC_VV: u32 = 3019907159;
pub const MASK_VMACC_VV: u32 = 4227887231;
pub const MATCH_VNMSAC_VV: u32 = 3154124887;
pub const MASK_VNMSAC_VV: u32 = 4227887231;
pub const MATCH_VWADDU_VV: u32 = 3221233751;
pub const MASK_VWADDU_VV: u32 = 4227887231;
pub const MATCH_VWADD_VV: u32 = 3288342615;
pub const MASK_VWADD_VV: u32 = 4227887231;
pub const MATCH_VWSUBU_VV: u32 = 3355451479;
pub const MASK_VWSUBU_VV: u32 = 4227887231;
pub const MATCH_VWSUB_VV: u32 = 3422560343;
pub const MASK_VWSUB_VV: u32 = 4227887231;
pub const MATCH_VWADDU_WV: u32 = 3489669207;
pub const MASK_VWADDU_WV: u32 = 4227887231;
pub const MATCH_VWADD_WV: u32 = 3556778071;
pub const MASK_VWADD_WV: u32 = 4227887231;
pub const MATCH_VWSUBU_WV: u32 = 3623886935;
pub const MASK_VWSUBU_WV: u32 = 4227887231;
pub const MATCH_VWSUB_WV: u32 = 3690995799;
pub const MASK_VWSUB_WV: u32 = 4227887231;
pub const MATCH_VWMULU_VV: u32 = 3758104663;
pub const MASK_VWMULU_VV: u32 = 4227887231;
pub const MATCH_VWMULSU_VV: u32 = 3892322391;
pub const MASK_VWMULSU_VV: u32 = 4227887231;
pub const MATCH_VWMUL_VV: u32 = 3959431255;
pub const MASK_VWMUL_VV: u32 = 4227887231;
pub const MATCH_VWMACCU_VV: u32 = 4026540119;
pub const MASK_VWMACCU_VV: u32 = 4227887231;
pub const MATCH_VWMACC_VV: u32 = 4093648983;
pub const MASK_VWMACC_VV: u32 = 4227887231;
pub const MATCH_VWMACCSU_VV: u32 = 4227866711;
pub const MASK_VWMACCSU_VV: u32 = 4227887231;
pub const MATCH_VAADDU_VX: u32 = 536895575;
pub const MASK_VAADDU_VX: u32 = 4227887231;
pub const MATCH_VAADD_VX: u32 = 604004439;
pub const MASK_VAADD_VX: u32 = 4227887231;
pub const MATCH_VASUBU_VX: u32 = 671113303;
pub const MASK_VASUBU_VX: u32 = 4227887231;
pub const MATCH_VASUB_VX: u32 = 738222167;
pub const MASK_VASUB_VX: u32 = 4227887231;
pub const MATCH_VMV_S_X: u32 = 1107320919;
pub const MASK_VMV_S_X: u32 = 4293947519;
pub const MATCH_VSLIDE1UP_VX: u32 = 939548759;
pub const MASK_VSLIDE1UP_VX: u32 = 4227887231;
pub const MATCH_VSLIDE1DOWN_VX: u32 = 1006657623;
pub const MASK_VSLIDE1DOWN_VX: u32 = 4227887231;
pub const MATCH_VDIVU_VX: u32 = 2147508311;
pub const MASK_VDIVU_VX: u32 = 4227887231;
pub const MATCH_VDIV_VX: u32 = 2214617175;
pub const MASK_VDIV_VX: u32 = 4227887231;
pub const MATCH_VREMU_VX: u32 = 2281726039;
pub const MASK_VREMU_VX: u32 = 4227887231;
pub const MATCH_VREM_VX: u32 = 2348834903;
pub const MASK_VREM_VX: u32 = 4227887231;
pub const MATCH_VMULHU_VX: u32 = 2415943767;
pub const MASK_VMULHU_VX: u32 = 4227887231;
pub const MATCH_VMUL_VX: u32 = 2483052631;
pub const MASK_VMUL_VX: u32 = 4227887231;
pub const MATCH_VMULHSU_VX: u32 = 2550161495;
pub const MASK_VMULHSU_VX: u32 = 4227887231;
pub const MATCH_VMULH_VX: u32 = 2617270359;
pub const MASK_VMULH_VX: u32 = 4227887231;
pub const MATCH_VMADD_VX: u32 = 2751488087;
pub const MASK_VMADD_VX: u32 = 4227887231;
pub const MATCH_VNMSUB_VX: u32 = 2885705815;
pub const MASK_VNMSUB_VX: u32 = 4227887231;
pub const MATCH_VMACC_VX: u32 = 3019923543;
pub const MASK_VMACC_VX: u32 = 4227887231;
pub const MATCH_VNMSAC_VX: u32 = 3154141271;
pub const MASK_VNMSAC_VX: u32 = 4227887231;
pub const MATCH_VWADDU_VX: u32 = 3221250135;
pub const MASK_VWADDU_VX: u32 = 4227887231;
pub const MATCH_VWADD_VX: u32 = 3288358999;
pub const MASK_VWADD_VX: u32 = 4227887231;
pub const MATCH_VWSUBU_VX: u32 = 3355467863;
pub const MASK_VWSUBU_VX: u32 = 4227887231;
pub const MATCH_VWSUB_VX: u32 = 3422576727;
pub const MASK_VWSUB_VX: u32 = 4227887231;
pub const MATCH_VWADDU_WX: u32 = 3489685591;
pub const MASK_VWADDU_WX: u32 = 4227887231;
pub const MATCH_VWADD_WX: u32 = 3556794455;
pub const MASK_VWADD_WX: u32 = 4227887231;
pub const MATCH_VWSUBU_WX: u32 = 3623903319;
pub const MASK_VWSUBU_WX: u32 = 4227887231;
pub const MATCH_VWSUB_WX: u32 = 3691012183;
pub const MASK_VWSUB_WX: u32 = 4227887231;
pub const MATCH_VWMULU_VX: u32 = 3758121047;
pub const MASK_VWMULU_VX: u32 = 4227887231;
pub const MATCH_VWMULSU_VX: u32 = 3892338775;
pub const MASK_VWMULSU_VX: u32 = 4227887231;
pub const MATCH_VWMUL_VX: u32 = 3959447639;
pub const MASK_VWMUL_VX: u32 = 4227887231;
pub const MATCH_VWMACCU_VX: u32 = 4026556503;
pub const MASK_VWMACCU_VX: u32 = 4227887231;
pub const MATCH_VWMACC_VX: u32 = 4093665367;
pub const MASK_VWMACC_VX: u32 = 4227887231;
pub const MATCH_VWMACCUS_VX: u32 = 4160774231;
pub const MASK_VWMACCUS_VX: u32 = 4227887231;
pub const MATCH_VWMACCSU_VX: u32 = 4227883095;
pub const MASK_VWMACCSU_VX: u32 = 4227887231;
pub const MATCH_VAMOSWAPW_V: u32 = 134242351;
pub const MASK_VAMOSWAPW_V: u32 = 4160778367;
pub const MATCH_VAMOADDW_V: u32 = 24623;
pub const MASK_VAMOADDW_V: u32 = 4160778367;
pub const MATCH_VAMOXORW_V: u32 = 536895535;
pub const MASK_VAMOXORW_V: u32 = 4160778367;
pub const MATCH_VAMOANDW_V: u32 = 1610637359;
pub const MASK_VAMOANDW_V: u32 = 4160778367;
pub const MATCH_VAMOORW_V: u32 = 1073766447;
pub const MASK_VAMOORW_V: u32 = 4160778367;
pub const MATCH_VAMOMINW_V: u32 = 2147508271;
pub const MASK_VAMOMINW_V: u32 = 4160778367;
pub const MATCH_VAMOMAXW_V: u32 = 2684379183;
pub const MASK_VAMOMAXW_V: u32 = 4160778367;
pub const MATCH_VAMOMINUW_V: u32 = 3221250095;
pub const MASK_VAMOMINUW_V: u32 = 4160778367;
pub const MATCH_VAMOMAXUW_V: u32 = 3758121007;
pub const MASK_VAMOMAXUW_V: u32 = 4160778367;
pub const MATCH_VAMOSWAPE_V: u32 = 134246447;
pub const MASK_VAMOSWAPE_V: u32 = 4160778367;
pub const MATCH_VAMOADDE_V: u32 = 28719;
pub const MASK_VAMOADDE_V: u32 = 4160778367;
pub const MATCH_VAMOXORE_V: u32 = 536899631;
pub const MASK_VAMOXORE_V: u32 = 4160778367;
pub const MATCH_VAMOANDE_V: u32 = 1610641455;
pub const MASK_VAMOANDE_V: u32 = 4160778367;
pub const MATCH_VAMOORE_V: u32 = 1073770543;
pub const MASK_VAMOORE_V: u32 = 4160778367;
pub const MATCH_VAMOMINE_V: u32 = 2147512367;
pub const MASK_VAMOMINE_V: u32 = 4160778367;
pub const MATCH_VAMOMAXE_V: u32 = 2684383279;
pub const MASK_VAMOMAXE_V: u32 = 4160778367;
pub const MATCH_VAMOMINUE_V: u32 = 3221254191;
pub const MASK_VAMOMINUE_V: u32 = 4160778367;
pub const MATCH_VAMOMAXUE_V: u32 = 3758125103;
pub const MASK_VAMOMAXUE_V: u32 = 4160778367;
pub const MATCH_VMVNFR_V: u32 = 2650812503;
pub const MASK_VMVNFR_V: u32 = 4261441663;
pub const CSR_FFLAGS: u32 = 1;
pub const CSR_FRM: u32 = 2;
pub const CSR_FCSR: u32 = 3;
pub const CSR_USTATUS: u32 = 0;
pub const CSR_UIE: u32 = 4;
pub const CSR_UTVEC: u32 = 5;
pub const CSR_VSTART: u32 = 8;
pub const CSR_VXSAT: u32 = 9;
pub const CSR_VXRM: u32 = 10;
pub const CSR_VCSR: u32 = 15;
pub const CSR_USCRATCH: u32 = 64;
pub const CSR_UEPC: u32 = 65;
pub const CSR_UCAUSE: u32 = 66;
pub const CSR_UTVAL: u32 = 67;
pub const CSR_UIP: u32 = 68;
pub const CSR_CYCLE: u32 = 3072;
pub const CSR_TIME: u32 = 3073;
pub const CSR_INSTRET: u32 = 3074;
pub const CSR_HPMCOUNTER3: u32 = 3075;
pub const CSR_HPMCOUNTER4: u32 = 3076;
pub const CSR_HPMCOUNTER5: u32 = 3077;
pub const CSR_HPMCOUNTER6: u32 = 3078;
pub const CSR_HPMCOUNTER7: u32 = 3079;
pub const CSR_HPMCOUNTER8: u32 = 3080;
pub const CSR_HPMCOUNTER9: u32 = 3081;
pub const CSR_HPMCOUNTER10: u32 = 3082;
pub const CSR_HPMCOUNTER11: u32 = 3083;
pub const CSR_HPMCOUNTER12: u32 = 3084;
pub const CSR_HPMCOUNTER13: u32 = 3085;
pub const CSR_HPMCOUNTER14: u32 = 3086;
pub const CSR_HPMCOUNTER15: u32 = 3087;
pub const CSR_HPMCOUNTER16: u32 = 3088;
pub const CSR_HPMCOUNTER17: u32 = 3089;
pub const CSR_HPMCOUNTER18: u32 = 3090;
pub const CSR_HPMCOUNTER19: u32 = 3091;
pub const CSR_HPMCOUNTER20: u32 = 3092;
pub const CSR_HPMCOUNTER21: u32 = 3093;
pub const CSR_HPMCOUNTER22: u32 = 3094;
pub const CSR_HPMCOUNTER23: u32 = 3095;
pub const CSR_HPMCOUNTER24: u32 = 3096;
pub const CSR_HPMCOUNTER25: u32 = 3097;
pub const CSR_HPMCOUNTER26: u32 = 3098;
pub const CSR_HPMCOUNTER27: u32 = 3099;
pub const CSR_HPMCOUNTER28: u32 = 3100;
pub const CSR_HPMCOUNTER29: u32 = 3101;
pub const CSR_HPMCOUNTER30: u32 = 3102;
pub const CSR_HPMCOUNTER31: u32 = 3103;
pub const CSR_VL: u32 = 3104;
pub const CSR_VTYPE: u32 = 3105;
pub const CSR_VLENB: u32 = 3106;
pub const CSR_SSTATUS: u32 = 256;
pub const CSR_SEDELEG: u32 = 258;
pub const CSR_SIDELEG: u32 = 259;
pub const CSR_SIE: u32 = 260;
pub const CSR_STVEC: u32 = 261;
pub const CSR_SCOUNTEREN: u32 = 262;
pub const CSR_SSCRATCH: u32 = 320;
pub const CSR_SEPC: u32 = 321;
pub const CSR_SCAUSE: u32 = 322;
pub const CSR_STVAL: u32 = 323;
pub const CSR_SIP: u32 = 324;
pub const CSR_SATP: u32 = 384;
pub const CSR_VSSTATUS: u32 = 512;
pub const CSR_VSIE: u32 = 516;
pub const CSR_VSTVEC: u32 = 517;
pub const CSR_VSSCRATCH: u32 = 576;
pub const CSR_VSEPC: u32 = 577;
pub const CSR_VSCAUSE: u32 = 578;
pub const CSR_VSTVAL: u32 = 579;
pub const CSR_VSIP: u32 = 580;
pub const CSR_VSATP: u32 = 640;
pub const CSR_HSTATUS: u32 = 1536;
pub const CSR_HEDELEG: u32 = 1538;
pub const CSR_HIDELEG: u32 = 1539;
pub const CSR_HIE: u32 = 1540;
pub const CSR_HTIMEDELTA: u32 = 1541;
pub const CSR_HCOUNTEREN: u32 = 1542;
pub const CSR_HGEIE: u32 = 1543;
pub const CSR_HTVAL: u32 = 1603;
pub const CSR_HIP: u32 = 1604;
pub const CSR_HVIP: u32 = 1605;
pub const CSR_HTINST: u32 = 1610;
pub const CSR_HGATP: u32 = 1664;
pub const CSR_HGEIP: u32 = 3602;
pub const CSR_UTVT: u32 = 7;
pub const CSR_UNXTI: u32 = 69;
pub const CSR_UINTSTATUS: u32 = 70;
pub const CSR_USCRATCHCSW: u32 = 72;
pub const CSR_USCRATCHCSWL: u32 = 73;
pub const CSR_STVT: u32 = 263;
pub const CSR_SNXTI: u32 = 325;
pub const CSR_SINTSTATUS: u32 = 326;
pub const CSR_SSCRATCHCSW: u32 = 328;
pub const CSR_SSCRATCHCSWL: u32 = 329;
pub const CSR_MTVT: u32 = 775;
pub const CSR_MNXTI: u32 = 837;
pub const CSR_MINTSTATUS: u32 = 838;
pub const CSR_MSCRATCHCSW: u32 = 840;
pub const CSR_MSCRATCHCSWL: u32 = 841;
pub const CSR_MSTATUS: u32 = 768;
pub const CSR_MISA: u32 = 769;
pub const CSR_MEDELEG: u32 = 770;
pub const CSR_MIDELEG: u32 = 771;
pub const CSR_MIE: u32 = 772;
pub const CSR_MTVEC: u32 = 773;
pub const CSR_MCOUNTEREN: u32 = 774;
pub const CSR_MCOUNTINHIBIT: u32 = 800;
pub const CSR_MSCRATCH: u32 = 832;
pub const CSR_MEPC: u32 = 833;
pub const CSR_MCAUSE: u32 = 834;
pub const CSR_MTVAL: u32 = 835;
pub const CSR_MIP: u32 = 836;
pub const CSR_MTINST: u32 = 842;
pub const CSR_MTVAL2: u32 = 843;
pub const CSR_PMPCFG0: u32 = 928;
pub const CSR_PMPCFG1: u32 = 929;
pub const CSR_PMPCFG2: u32 = 930;
pub const CSR_PMPCFG3: u32 = 931;
pub const CSR_PMPADDR0: u32 = 944;
pub const CSR_PMPADDR1: u32 = 945;
pub const CSR_PMPADDR2: u32 = 946;
pub const CSR_PMPADDR3: u32 = 947;
pub const CSR_PMPADDR4: u32 = 948;
pub const CSR_PMPADDR5: u32 = 949;
pub const CSR_PMPADDR6: u32 = 950;
pub const CSR_PMPADDR7: u32 = 951;
pub const CSR_PMPADDR8: u32 = 952;
pub const CSR_PMPADDR9: u32 = 953;
pub const CSR_PMPADDR10: u32 = 954;
pub const CSR_PMPADDR11: u32 = 955;
pub const CSR_PMPADDR12: u32 = 956;
pub const CSR_PMPADDR13: u32 = 957;
pub const CSR_PMPADDR14: u32 = 958;
pub const CSR_PMPADDR15: u32 = 959;
pub const CSR_TSELECT: u32 = 1952;
pub const CSR_TDATA1: u32 = 1953;
pub const CSR_TDATA2: u32 = 1954;
pub const CSR_TDATA3: u32 = 1955;
pub const CSR_DCSR: u32 = 1968;
pub const CSR_DPC: u32 = 1969;
pub const CSR_DSCRATCH0: u32 = 1970;
pub const CSR_DSCRATCH1: u32 = 1971;
pub const CSR_MCYCLE: u32 = 2816;
pub const CSR_MINSTRET: u32 = 2818;
pub const CSR_MHPMCOUNTER3: u32 = 2819;
pub const CSR_MHPMCOUNTER4: u32 = 2820;
pub const CSR_MHPMCOUNTER5: u32 = 2821;
pub const CSR_MHPMCOUNTER6: u32 = 2822;
pub const CSR_MHPMCOUNTER7: u32 = 2823;
pub const CSR_MHPMCOUNTER8: u32 = 2824;
pub const CSR_MHPMCOUNTER9: u32 = 2825;
pub const CSR_MHPMCOUNTER10: u32 = 2826;
pub const CSR_MHPMCOUNTER11: u32 = 2827;
pub const CSR_MHPMCOUNTER12: u32 = 2828;
pub const CSR_MHPMCOUNTER13: u32 = 2829;
pub const CSR_MHPMCOUNTER14: u32 = 2830;
pub const CSR_MHPMCOUNTER15: u32 = 2831;
pub const CSR_MHPMCOUNTER16: u32 = 2832;
pub const CSR_MHPMCOUNTER17: u32 = 2833;
pub const CSR_MHPMCOUNTER18: u32 = 2834;
pub const CSR_MHPMCOUNTER19: u32 = 2835;
pub const CSR_MHPMCOUNTER20: u32 = 2836;
pub const CSR_MHPMCOUNTER21: u32 = 2837;
pub const CSR_MHPMCOUNTER22: u32 = 2838;
pub const CSR_MHPMCOUNTER23: u32 = 2839;
pub const CSR_MHPMCOUNTER24: u32 = 2840;
pub const CSR_MHPMCOUNTER25: u32 = 2841;
pub const CSR_MHPMCOUNTER26: u32 = 2842;
pub const CSR_MHPMCOUNTER27: u32 = 2843;
pub const CSR_MHPMCOUNTER28: u32 = 2844;
pub const CSR_MHPMCOUNTER29: u32 = 2845;
pub const CSR_MHPMCOUNTER30: u32 = 2846;
pub const CSR_MHPMCOUNTER31: u32 = 2847;
pub const CSR_MHPMEVENT3: u32 = 803;
pub const CSR_MHPMEVENT4: u32 = 804;
pub const CSR_MHPMEVENT5: u32 = 805;
pub const CSR_MHPMEVENT6: u32 = 806;
pub const CSR_MHPMEVENT7: u32 = 807;
pub const CSR_MHPMEVENT8: u32 = 808;
pub const CSR_MHPMEVENT9: u32 = 809;
pub const CSR_MHPMEVENT10: u32 = 810;
pub const CSR_MHPMEVENT11: u32 = 811;
pub const CSR_MHPMEVENT12: u32 = 812;
pub const CSR_MHPMEVENT13: u32 = 813;
pub const CSR_MHPMEVENT14: u32 = 814;
pub const CSR_MHPMEVENT15: u32 = 815;
pub const CSR_MHPMEVENT16: u32 = 816;
pub const CSR_MHPMEVENT17: u32 = 817;
pub const CSR_MHPMEVENT18: u32 = 818;
pub const CSR_MHPMEVENT19: u32 = 819;
pub const CSR_MHPMEVENT20: u32 = 820;
pub const CSR_MHPMEVENT21: u32 = 821;
pub const CSR_MHPMEVENT22: u32 = 822;
pub const CSR_MHPMEVENT23: u32 = 823;
pub const CSR_MHPMEVENT24: u32 = 824;
pub const CSR_MHPMEVENT25: u32 = 825;
pub const CSR_MHPMEVENT26: u32 = 826;
pub const CSR_MHPMEVENT27: u32 = 827;
pub const CSR_MHPMEVENT28: u32 = 828;
pub const CSR_MHPMEVENT29: u32 = 829;
pub const CSR_MHPMEVENT30: u32 = 830;
pub const CSR_MHPMEVENT31: u32 = 831;
pub const CSR_MVENDORID: u32 = 3857;
pub const CSR_MARCHID: u32 = 3858;
pub const CSR_MIMPID: u32 = 3859;
pub const CSR_MHARTID: u32 = 3860;
pub const CSR_HTIMEDELTAH: u32 = 1557;
pub const CSR_CYCLEH: u32 = 3200;
pub const CSR_TIMEH: u32 = 3201;
pub const CSR_INSTRETH: u32 = 3202;
pub const CSR_HPMCOUNTER3H: u32 = 3203;
pub const CSR_HPMCOUNTER4H: u32 = 3204;
pub const CSR_HPMCOUNTER5H: u32 = 3205;
pub const CSR_HPMCOUNTER6H: u32 = 3206;
pub const CSR_HPMCOUNTER7H: u32 = 3207;
pub const CSR_HPMCOUNTER8H: u32 = 3208;
pub const CSR_HPMCOUNTER9H: u32 = 3209;
pub const CSR_HPMCOUNTER10H: u32 = 3210;
pub const CSR_HPMCOUNTER11H: u32 = 3211;
pub const CSR_HPMCOUNTER12H: u32 = 3212;
pub const CSR_HPMCOUNTER13H: u32 = 3213;
pub const CSR_HPMCOUNTER14H: u32 = 3214;
pub const CSR_HPMCOUNTER15H: u32 = 3215;
pub const CSR_HPMCOUNTER16H: u32 = 3216;
pub const CSR_HPMCOUNTER17H: u32 = 3217;
pub const CSR_HPMCOUNTER18H: u32 = 3218;
pub const CSR_HPMCOUNTER19H: u32 = 3219;
pub const CSR_HPMCOUNTER20H: u32 = 3220;
pub const CSR_HPMCOUNTER21H: u32 = 3221;
pub const CSR_HPMCOUNTER22H: u32 = 3222;
pub const CSR_HPMCOUNTER23H: u32 = 3223;
pub const CSR_HPMCOUNTER24H: u32 = 3224;
pub const CSR_HPMCOUNTER25H: u32 = 3225;
pub const CSR_HPMCOUNTER26H: u32 = 3226;
pub const CSR_HPMCOUNTER27H: u32 = 3227;
pub const CSR_HPMCOUNTER28H: u32 = 3228;
pub const CSR_HPMCOUNTER29H: u32 = 3229;
pub const CSR_HPMCOUNTER30H: u32 = 3230;
pub const CSR_HPMCOUNTER31H: u32 = 3231;
pub const CSR_MSTATUSH: u32 = 784;
pub const CSR_MCYCLEH: u32 = 2944;
pub const CSR_MINSTRETH: u32 = 2946;
pub const CSR_MHPMCOUNTER3H: u32 = 2947;
pub const CSR_MHPMCOUNTER4H: u32 = 2948;
pub const CSR_MHPMCOUNTER5H: u32 = 2949;
pub const CSR_MHPMCOUNTER6H: u32 = 2950;
pub const CSR_MHPMCOUNTER7H: u32 = 2951;
pub const CSR_MHPMCOUNTER8H: u32 = 2952;
pub const CSR_MHPMCOUNTER9H: u32 = 2953;
pub const CSR_MHPMCOUNTER10H: u32 = 2954;
pub const CSR_MHPMCOUNTER11H: u32 = 2955;
pub const CSR_MHPMCOUNTER12H: u32 = 2956;
pub const CSR_MHPMCOUNTER13H: u32 = 2957;
pub const CSR_MHPMCOUNTER14H: u32 = 2958;
pub const CSR_MHPMCOUNTER15H: u32 = 2959;
pub const CSR_MHPMCOUNTER16H: u32 = 2960;
pub const CSR_MHPMCOUNTER17H: u32 = 2961;
pub const CSR_MHPMCOUNTER18H: u32 = 2962;
pub const CSR_MHPMCOUNTER19H: u32 = 2963;
pub const CSR_MHPMCOUNTER20H: u32 = 2964;
pub const CSR_MHPMCOUNTER21H: u32 = 2965;
pub const CSR_MHPMCOUNTER22H: u32 = 2966;
pub const CSR_MHPMCOUNTER23H: u32 = 2967;
pub const CSR_MHPMCOUNTER24H: u32 = 2968;
pub const CSR_MHPMCOUNTER25H: u32 = 2969;
pub const CSR_MHPMCOUNTER26H: u32 = 2970;
pub const CSR_MHPMCOUNTER27H: u32 = 2971;
pub const CSR_MHPMCOUNTER28H: u32 = 2972;
pub const CSR_MHPMCOUNTER29H: u32 = 2973;
pub const CSR_MHPMCOUNTER30H: u32 = 2974;
pub const CSR_MHPMCOUNTER31H: u32 = 2975;
pub const CAUSE_MISALIGNED_FETCH: u32 = 0;
pub const CAUSE_FETCH_ACCESS: u32 = 1;
pub const CAUSE_ILLEGAL_INSTRUCTION: u32 = 2;
pub const CAUSE_BREAKPOINT: u32 = 3;
pub const CAUSE_MISALIGNED_LOAD: u32 = 4;
pub const CAUSE_LOAD_ACCESS: u32 = 5;
pub const CAUSE_MISALIGNED_STORE: u32 = 6;
pub const CAUSE_STORE_ACCESS: u32 = 7;
pub const CAUSE_USER_ECALL: u32 = 8;
pub const CAUSE_SUPERVISOR_ECALL: u32 = 9;
pub const CAUSE_HYPERVISOR_ECALL: u32 = 10;
pub const CAUSE_MACHINE_ECALL: u32 = 11;
pub const CAUSE_FETCH_PAGE_FAULT: u32 = 12;
pub const CAUSE_LOAD_PAGE_FAULT: u32 = 13;
pub const CAUSE_STORE_PAGE_FAULT: u32 = 15;
pub const PT_NULL: u32 = 0;
pub const PT_LOAD: u32 = 1;
pub const PT_DYNAMIC: u32 = 2;
pub const PT_INTERP: u32 = 3;
pub const PT_NOTE: u32 = 4;
pub const PT_SHLIB: u32 = 5;
pub const PT_PHDR: u32 = 6;
pub const PT_TLS: u32 = 7;
pub const PT_LOOS: u32 = 1610612736;
pub const PT_HIOS: u32 = 1879048191;
pub const PT_LOPROC: u32 = 1879048192;
pub const PT_HIPROC: u32 = 2147483647;
pub const JOYSTICK_AXIS6_PACKET_SIZE: u32 = 10;
pub const JOYSTICK_BUTTON_PACKET_SIZE: u32 = 2;
pub const KEYBOARD_SCANCODE_INDEX: u32 = 0;
pub const KEYBOARD_STATE_INDEX: u32 = 1;
pub const KEYBOARD_MODIFIERS_LOWER_INDEX: u32 = 2;
pub const KEYBOARD_MODIFIERS_UPPER_INDEX: u32 = 3;
pub const KEYBOARD_PACKET_SIZE: u32 = 4;
pub const LENSCANS: u32 = 10;
pub const EOF: i32 = -1;
pub const SD_READY: u32 = 0;
pub const SD_START_TOKEN: u32 = 254;
pub const TASK_MAX: u32 = 5;
pub const FP_NAN: u32 = 0;
pub const FP_INFINITE: u32 = 1;
pub const FP_ZERO: u32 = 2;
pub const FP_SUBNORMAL: u32 = 3;
pub const FP_NORMAL: u32 = 4;
pub const MATH_ERRNO: u32 = 1;
pub const MATH_ERREXCEPT: u32 = 2;
pub const BUFSIZ: u32 = 1024;
pub const FOPEN_MAX: u32 = 20;
pub const FILENAME_MAX: u32 = 1024;
pub const SEEK_SET: u32 = 0;
pub const SEEK_CUR: u32 = 1;
pub const SEEK_END: u32 = 2;
pub const TMP_MAX: u32 = 26;
pub const UARTCTL_RESET_TX_FIFO: u32 = 1;
pub const UARTCTL_RESET_RX_FIFO: u32 = 2;
pub const UARTCTL_RESERVED0: u32 = 4;
pub const UARTCTL_RESERVED1: u32 = 8;
pub const UARTCTL_ENABLEINTERRUPT: u32 = 16;
pub const UARTSTA_RXFIFO_VALID: u32 = 1;
pub const UARTSTA_RXFIFO_FULL: u32 = 2;
pub const UARTSTA_TXFIFO_EMPTY: u32 = 4;
pub const UARTSTA_TXFIFO_FULL: u32 = 8;
pub const UARTSTA_INTERRUPTENABLED: u32 = 16;
pub const USBDESCTYPE_UNKNOWN: u32 = 0;
pub const USBDESCTYPE_DEVICE: u32 = 1;
pub const USBDESCTYPE_CONFIGURATION: u32 = 2;
pub const USBDESCTYPE_STRING: u32 = 3;
pub const USBDESCTYPE_INTERFACE: u32 = 4;
pub const USBDESCTYPE_ENDPOINT: u32 = 5;
pub const USBDESCTYPE_DEVICEQUALIFIER: u32 = 6;
pub const USBDESCTYPE_OTHERSPEEDCFG: u32 = 7;
pub const USBDESCTYPE_INTERFACEPOWER: u32 = 8;
pub const USBDESCTYPE_OTG: u32 = 9;
pub const USBDESCTYPE_DEBUG: u32 = 10;
pub const USBDESCTYPE_INTERFACEASSOC: u32 = 11;
pub const USBDESCTYPE_SECURITY: u32 = 12;
pub const USBDESCTYPE_KEY: u32 = 13;
pub const USBDESCTYPE_ENCRYPTTYPE: u32 = 14;
pub const USBDESCTYPE_BINARYDEVOBJSTORE: u32 = 15;
pub const USBDESCTYPE_DEVICECAPABILITY: u32 = 16;
pub const USBDESCTYPE_WIRELESSEPCOMPANION: u32 = 17;
pub const USBDESCTYPE_HIDSPECIFIC: u32 = 33;
pub const USBDESCTYPE_SUPERSPEEDEPCOMPANION: u32 = 48;
pub const USBDESCTYPE_SUPERSPEEDISOEPCOMPANION: u32 = 49;
pub const VPUCMD_SETVPAGE: u32 = 0;
pub const VPUCMD_SETPAL: u32 = 1;
pub const VPUCMD_SETVMODE: u32 = 2;
pub const VPUCMD_CTLREGSEL: u32 = 3;
pub const VPUCMD_CTLREGSET: u32 = 4;
pub const VPUCMD_CTLREGCLR: u32 = 5;
pub const CONSOLEDIMGRAY: u32 = 0;
pub const CONSOLEDIMBLUE: u32 = 1;
pub const CONSOLEDIMGREEN: u32 = 2;
pub const CONSOLEDIMCYAN: u32 = 3;
pub const CONSOLEDIMRED: u32 = 4;
pub const CONSOLEDIMMAGENTA: u32 = 5;
pub const CONSOLEDIMYELLOW: u32 = 6;
pub const CONSOLEDIMWHITE: u32 = 7;
pub const CONSOLEGRAY: u32 = 8;
pub const CONSOLEBLUE: u32 = 9;
pub const CONSOLEGREEN: u32 = 10;
pub const CONSOLECYAN: u32 = 11;
pub const CONSOLERED: u32 = 12;
pub const CONSOLEMAGENTA: u32 = 13;
pub const CONSOLEYELLOW: u32 = 14;
pub const CONSOLEWHITE: u32 = 15;
pub const CONSOLEDEFAULTFG: u32 = 15;
pub const CONSOLEDEFAULTBG: u32 = 9;
pub type __intmax_t = u64;
pub type __uintmax_t = u64;
pub type intmax_t = __intmax_t;
pub type uintmax_t = __uintmax_t;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
pub struct imaxdiv_t {
    pub quot: intmax_t,
    pub rem: intmax_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of imaxdiv_t"][::core::mem::size_of::<imaxdiv_t>() - 16usize];
    ["Alignment of imaxdiv_t"][::core::mem::align_of::<imaxdiv_t>() - 8usize];
    ["Offset of field: imaxdiv_t::quot"][::core::mem::offset_of!(imaxdiv_t, quot) - 0usize];
    ["Offset of field: imaxdiv_t::rem"][::core::mem::offset_of!(imaxdiv_t, rem) - 8usize];
};
pub const EAPUSampleRate_ASR_44_100_Hz: EAPUSampleRate = 0;
pub const EAPUSampleRate_ASR_22_050_Hz: EAPUSampleRate = 1;
pub const EAPUSampleRate_ASR_11_025_Hz: EAPUSampleRate = 2;
pub const EAPUSampleRate_ASR_Halt: EAPUSampleRate = 3;
pub type EAPUSampleRate = ::core::ffi::c_uint;
pub type _off_t = u32;
pub type _fpos_t = u32;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct SJoystickState {
    pub count: u32,
    pub axis: [f32; 6usize],
    pub buttons: u16,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of SJoystickState"][::core::mem::size_of::<SJoystickState>() - 32usize];
    ["Alignment of SJoystickState"][::core::mem::align_of::<SJoystickState>() - 4usize];
    ["Offset of field: SJoystickState::count"]
        [::core::mem::offset_of!(SJoystickState, count) - 0usize];
    ["Offset of field: SJoystickState::axis"]
        [::core::mem::offset_of!(SJoystickState, axis) - 4usize];
    ["Offset of field: SJoystickState::buttons"]
        [::core::mem::offset_of!(SJoystickState, buttons) - 28usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
pub struct SKeyboardState {
    pub count: u32,
    pub scancode: u32,
    pub state: u32,
    pub modifiers: u32,
    pub ascii: u32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of SKeyboardState"][::core::mem::size_of::<SKeyboardState>() - 20usize];
    ["Alignment of SKeyboardState"][::core::mem::align_of::<SKeyboardState>() - 4usize];
    ["Offset of field: SKeyboardState::count"]
        [::core::mem::offset_of!(SKeyboardState, count) - 0usize];
    ["Offset of field: SKeyboardState::scancode"]
        [::core::mem::offset_of!(SKeyboardState, scancode) - 4usize];
    ["Offset of field: SKeyboardState::state"]
        [::core::mem::offset_of!(SKeyboardState, state) - 8usize];
    ["Offset of field: SKeyboardState::modifiers"]
        [::core::mem::offset_of!(SKeyboardState, modifiers) - 12usize];
    ["Offset of field: SKeyboardState::ascii"]
        [::core::mem::offset_of!(SKeyboardState, ascii) - 16usize];
};
pub type __gnuc_va_list = u32;
pub type va_list = __builtin_va_list;
pub type taskfunc = ::core::option::Option<unsafe extern "C" fn()>;
pub const ETaskState_TS_UNKNOWN: ETaskState = 0;
pub const ETaskState_TS_PAUSED: ETaskState = 1;
pub const ETaskState_TS_RUNNING: ETaskState = 2;
pub const ETaskState_TS_TERMINATING: ETaskState = 3;
pub const ETaskState_TS_TERMINATED: ETaskState = 4;
pub const ETaskState_TS_CREATED: ETaskState = 5;
pub type ETaskState = ::core::ffi::c_uint;
pub const ETaskHandlerState_TASK_IDLE: ETaskHandlerState = 0;
pub const ETaskHandlerState_TASK_SWITCHING: ETaskHandlerState = 1;
pub type ETaskHandlerState = ::core::ffi::c_uint;
pub const EBreakRequest_BR_NONE: EBreakRequest = 0;
pub const EBreakRequest_BR_HALTFORTASKSWITCH: EBreakRequest = 1;
pub type EBreakRequest = ::core::ffi::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub struct STask {
    pub HART: u32,
    pub runLength: u32,
    pub state: ETaskState,
    pub targetstate: ETaskState,
    pub exitCode: u32,
    pub regs: [u32; 32usize],
    pub name: u32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of STask"][::core::mem::size_of::<STask>() - 152usize];
    ["Alignment of STask"][::core::mem::align_of::<STask>() - 4usize];
    ["Offset of field: STask::HART"][::core::mem::offset_of!(STask, HART) - 0usize];
    ["Offset of field: STask::runLength"][::core::mem::offset_of!(STask, runLength) - 4usize];
    ["Offset of field: STask::state"][::core::mem::offset_of!(STask, state) - 8usize];
    ["Offset of field: STask::targetstate"][::core::mem::offset_of!(STask, targetstate) - 12usize];
    ["Offset of field: STask::exitCode"][::core::mem::offset_of!(STask, exitCode) - 16usize];
    ["Offset of field: STask::regs"][::core::mem::offset_of!(STask, regs) - 20usize];
    ["Offset of field: STask::name"][::core::mem::offset_of!(STask, name) - 148usize];
};
impl Default for STask {
    fn default() -> Self {
        let mut s = ::core::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::core::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub struct STaskContext {
    pub tasks: [STask; 5usize],
    pub state: ETaskHandlerState,
    pub brkreq: EBreakRequest,
    pub brkack: i32,
    pub currentTask: i32,
    pub numTasks: i32,
    pub kernelError: i32,
    pub kernelErrorData: [i32; 3usize],
    pub hartID: i32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of STaskContext"][::core::mem::size_of::<STaskContext>() - 800usize];
    ["Alignment of STaskContext"][::core::mem::align_of::<STaskContext>() - 4usize];
    ["Offset of field: STaskContext::tasks"][::core::mem::offset_of!(STaskContext, tasks) - 0usize];
    ["Offset of field: STaskContext::state"]
        [::core::mem::offset_of!(STaskContext, state) - 760usize];
    ["Offset of field: STaskContext::brkreq"]
        [::core::mem::offset_of!(STaskContext, brkreq) - 764usize];
    ["Offset of field: STaskContext::brkack"]
        [::core::mem::offset_of!(STaskContext, brkack) - 768usize];
    ["Offset of field: STaskContext::currentTask"]
        [::core::mem::offset_of!(STaskContext, currentTask) - 772usize];
    ["Offset of field: STaskContext::numTasks"]
        [::core::mem::offset_of!(STaskContext, numTasks) - 776usize];
    ["Offset of field: STaskContext::kernelError"]
        [::core::mem::offset_of!(STaskContext, kernelError) - 780usize];
    ["Offset of field: STaskContext::kernelErrorData"]
        [::core::mem::offset_of!(STaskContext, kernelErrorData) - 784usize];
    ["Offset of field: STaskContext::hartID"]
        [::core::mem::offset_of!(STaskContext, hartID) - 796usize];
};
impl Default for STaskContext {
    fn default() -> Self {
        let mut s = ::core::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::core::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
pub type __FILE = __BindgenOpaqueArray<u32, 26usize>;
#[repr(C)]
#[repr(align(4))]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
pub struct _glue {
    pub _bindgen_opaque_blob: [u32; 3usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _glue"][::core::mem::size_of::<_glue>() - 12usize];
    ["Alignment of _glue"][::core::mem::align_of::<_glue>() - 4usize];
};
#[repr(C)]
#[repr(align(8))]
pub struct _reent {
    pub _bindgen_opaque_blob: [u64; 36usize],
}
#[repr(C)]
#[repr(align(8))]
#[derive(Copy, Clone)]
pub union _reent__bindgen_ty_1 {
    pub _bindgen_opaque_blob: [u64; 25usize],
}
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
pub struct _reent__bindgen_ty_1__bindgen_ty_1 {
    pub _bindgen_opaque_blob: [u64; 25usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _reent__bindgen_ty_1__bindgen_ty_1"]
        [::core::mem::size_of::<_reent__bindgen_ty_1__bindgen_ty_1>() - 200usize];
    ["Alignment of _reent__bindgen_ty_1__bindgen_ty_1"]
        [::core::mem::align_of::<_reent__bindgen_ty_1__bindgen_ty_1>() - 8usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _reent__bindgen_ty_1"][::core::mem::size_of::<_reent__bindgen_ty_1>() - 200usize];
    ["Alignment of _reent__bindgen_ty_1"][::core::mem::align_of::<_reent__bindgen_ty_1>() - 8usize];
};
impl Default for _reent__bindgen_ty_1 {
    fn default() -> Self {
        let mut s = ::core::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::core::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _reent"][::core::mem::size_of::<_reent>() - 288usize];
    ["Alignment of _reent"][::core::mem::align_of::<_reent>() - 8usize];
};
impl Default for _reent {
    fn default() -> Self {
        let mut s = ::core::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::core::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
pub type FILE = __FILE;
pub type fpos_t = _fpos_t;
pub const EVideoMode_EVM_320_Wide: EVideoMode = 0;
pub const EVideoMode_EVM_640_Wide: EVideoMode = 1;
pub const EVideoMode_EVM_Count: EVideoMode = 2;
pub type EVideoMode = ::core::ffi::c_uint;
pub const EColorMode_ECM_8bit_Indexed: EColorMode = 0;
pub const EColorMode_ECM_16bit_RGB: EColorMode = 1;
pub const EColorMode_ECM_Count: EColorMode = 2;
pub type EColorMode = ::core::ffi::c_uint;
pub const EVideoScanoutEnable_EVS_Disable: EVideoScanoutEnable = 0;
pub const EVideoScanoutEnable_EVS_Enable: EVideoScanoutEnable = 1;
pub const EVideoScanoutEnable_EVS_Count: EVideoScanoutEnable = 2;
pub type EVideoScanoutEnable = ::core::ffi::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub struct EVideoContext {
    pub m_vmode: EVideoMode,
    pub m_cmode: EColorMode,
    pub m_scanEnable: EVideoScanoutEnable,
    pub m_strideInWords: u32,
    pub m_scanoutAddressCacheAligned: u32,
    pub m_cpuWriteAddressCacheAligned: u32,
    pub m_graphicsWidth: u32,
    pub m_graphicsHeight: u32,
    pub m_consoleWidth: u16,
    pub m_consoleHeight: u16,
    pub m_cursorX: u16,
    pub m_cursorY: u16,
    pub m_consoleUpdated: u16,
    pub m_caretX: u16,
    pub m_caretY: u16,
    pub m_consoleColor: u8,
    pub m_caretBlink: u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of EVideoContext"][::core::mem::size_of::<EVideoContext>() - 48usize];
    ["Alignment of EVideoContext"][::core::mem::align_of::<EVideoContext>() - 4usize];
    ["Offset of field: EVideoContext::m_vmode"]
        [::core::mem::offset_of!(EVideoContext, m_vmode) - 0usize];
    ["Offset of field: EVideoContext::m_cmode"]
        [::core::mem::offset_of!(EVideoContext, m_cmode) - 4usize];
    ["Offset of field: EVideoContext::m_scanEnable"]
        [::core::mem::offset_of!(EVideoContext, m_scanEnable) - 8usize];
    ["Offset of field: EVideoContext::m_strideInWords"]
        [::core::mem::offset_of!(EVideoContext, m_strideInWords) - 12usize];
    ["Offset of field: EVideoContext::m_scanoutAddressCacheAligned"]
        [::core::mem::offset_of!(EVideoContext, m_scanoutAddressCacheAligned) - 16usize];
    ["Offset of field: EVideoContext::m_cpuWriteAddressCacheAligned"]
        [::core::mem::offset_of!(EVideoContext, m_cpuWriteAddressCacheAligned) - 20usize];
    ["Offset of field: EVideoContext::m_graphicsWidth"]
        [::core::mem::offset_of!(EVideoContext, m_graphicsWidth) - 24usize];
    ["Offset of field: EVideoContext::m_graphicsHeight"]
        [::core::mem::offset_of!(EVideoContext, m_graphicsHeight) - 28usize];
    ["Offset of field: EVideoContext::m_consoleWidth"]
        [::core::mem::offset_of!(EVideoContext, m_consoleWidth) - 32usize];
    ["Offset of field: EVideoContext::m_consoleHeight"]
        [::core::mem::offset_of!(EVideoContext, m_consoleHeight) - 34usize];
    ["Offset of field: EVideoContext::m_cursorX"]
        [::core::mem::offset_of!(EVideoContext, m_cursorX) - 36usize];
    ["Offset of field: EVideoContext::m_cursorY"]
        [::core::mem::offset_of!(EVideoContext, m_cursorY) - 38usize];
    ["Offset of field: EVideoContext::m_consoleUpdated"]
        [::core::mem::offset_of!(EVideoContext, m_consoleUpdated) - 40usize];
    ["Offset of field: EVideoContext::m_caretX"]
        [::core::mem::offset_of!(EVideoContext, m_caretX) - 42usize];
    ["Offset of field: EVideoContext::m_caretY"]
        [::core::mem::offset_of!(EVideoContext, m_caretY) - 44usize];
    ["Offset of field: EVideoContext::m_consoleColor"]
        [::core::mem::offset_of!(EVideoContext, m_consoleColor) - 46usize];
    ["Offset of field: EVideoContext::m_caretBlink"]
        [::core::mem::offset_of!(EVideoContext, m_caretBlink) - 47usize];
};
impl Default for EVideoContext {
    fn default() -> Self {
        let mut s = ::core::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::core::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub struct EVideoSwapContext {
    pub cycle: u32,
    pub readpage: *mut u8,
    pub writepage: *mut u8,
    pub framebufferA: *mut u8,
    pub framebufferB: *mut u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of EVideoSwapContext"][::core::mem::size_of::<EVideoSwapContext>() - 20usize];
    ["Alignment of EVideoSwapContext"][::core::mem::align_of::<EVideoSwapContext>() - 4usize];
    ["Offset of field: EVideoSwapContext::cycle"]
        [::core::mem::offset_of!(EVideoSwapContext, cycle) - 0usize];
    ["Offset of field: EVideoSwapContext::readpage"]
        [::core::mem::offset_of!(EVideoSwapContext, readpage) - 4usize];
    ["Offset of field: EVideoSwapContext::writepage"]
        [::core::mem::offset_of!(EVideoSwapContext, writepage) - 8usize];
    ["Offset of field: EVideoSwapContext::framebufferA"]
        [::core::mem::offset_of!(EVideoSwapContext, framebufferA) - 12usize];
    ["Offset of field: EVideoSwapContext::framebufferB"]
        [::core::mem::offset_of!(EVideoSwapContext, framebufferB) - 16usize];
};
impl Default for EVideoSwapContext {
    fn default() -> Self {
        let mut s = ::core::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::core::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
pub type __builtin_va_list = u32;
unsafe extern "C" {
    pub static mut IO_AUDIOOUT: *mut u32;
    #[link_name = "\u{1}_Z17APUAllocateBufferj"]
    pub fn APUAllocateBuffer(_size: u32) -> *mut u8;
    #[link_name = "\u{1}_Z16APUSetBufferSizej"]
    pub fn APUSetBufferSize(audioBufferSize: u32);
    #[link_name = "\u{1}_Z11APUStartDMAj"]
    pub fn APUStartDMA(audioBufferAddress16byteAligned: u32);
    #[link_name = "\u{1}_Z16APUSetSampleRate14EAPUSampleRate"]
    pub fn APUSetSampleRate(sampleRate: EAPUSampleRate);
    #[link_name = "\u{1}_Z11E32ReadTimev"]
    pub fn E32ReadTime() -> u64;
    #[link_name = "\u{1}_Z13E32ReadCyclesv"]
    pub fn E32ReadCycles() -> u64;
    #[link_name = "\u{1}_Z26E32ReadRetiredInstructionsv"]
    pub fn E32ReadRetiredInstructions() -> u64;
    #[link_name = "\u{1}_Z17E32SetTimeComparey"]
    pub fn E32SetTimeCompare(future: u64);
    #[link_name = "\u{1}_Z9ClockToMsy"]
    pub fn ClockToMs(clk: u64) -> u32;
    #[link_name = "\u{1}_Z9ClockToUsy"]
    pub fn ClockToUs(clk: u64) -> u32;
    #[link_name = "\u{1}_Z12ClockMsToHMSjPjS_S_"]
    pub fn ClockMsToHMS(ms: u32, hours: *mut u32, minutes: *mut u32, seconds: *mut u32);
    #[link_name = "\u{1}_Z8E32Sleepy"]
    pub fn E32Sleep(ticks: u64);
    #[link_name = "\u{1}_Z20E32WriteMemMappedCSRjjj"]
    pub fn E32WriteMemMappedCSR(_hart: u32, _csr: u32, _value: u32);
    #[link_name = "\u{1}_Z19E32ReadMemMappedCSRjj"]
    pub fn E32ReadMemMappedCSR(_hart: u32, _csr: u32) -> u32;
    #[link_name = "\u{1}_Z11E32SetupCPUjPv"]
    pub fn E32SetupCPU(hartid: u32, workerThread: *mut ::core::ffi::c_void);
    #[link_name = "\u{1}_Z11E32ResetCPUj"]
    pub fn E32ResetCPU(hartid: u32);
    #[link_name = "\u{1}_Z13E32ClearResetj"]
    pub fn E32ClearReset(hartid: u32);
    #[link_name = "\u{1}_Z23E32BeginCriticalSectionv"]
    pub fn E32BeginCriticalSection();
    #[link_name = "\u{1}_Z21E32EndCriticalSectionv"]
    pub fn E32EndCriticalSection();
    #[link_name = "\u{1}_Z16E32GetScratchpadv"]
    pub fn E32GetScratchpad() -> u32;
    #[link_name = "\u{1}_Z13ReadAxisStatePh"]
    pub fn ReadAxisState(scandata: *mut u8);
    #[link_name = "\u{1}_Z16ProcessAxisStatePh"]
    pub fn ProcessAxisState(scandata: *mut u8);
    #[link_name = "\u{1}_Z15ReadButtonStatePh"]
    pub fn ReadButtonState(scandata: *mut u8);
    #[link_name = "\u{1}_Z18ProcessButtonStatePh"]
    pub fn ProcessButtonState(scandata: *mut u8);
    #[link_name = "\u{1}_Z19UpdateJoystickStatev"]
    pub fn UpdateJoystickState();
    #[link_name = "\u{1}_Z16JoystickGetStatev"]
    pub fn JoystickGetState() -> *mut SJoystickState;
    #[link_name = "\u{1}_Z12ReadKeyStatePh"]
    pub fn ReadKeyState(scandata: *mut u8);
    #[link_name = "\u{1}_Z15ProcessKeyStatePh"]
    pub fn ProcessKeyState(scandata: *mut u8);
    #[link_name = "\u{1}_Z19UpdateKeyboardStatePh"]
    pub fn UpdateKeyboardState(scandata: *mut u8);
    #[link_name = "\u{1}_Z16KeyboardGetStatev"]
    pub fn KeyboardGetState() -> *mut SKeyboardState;
    #[link_name = "\u{1}_Z23KeyboardScanCodeToASCIIhh"]
    pub fn KeyboardScanCodeToASCII(scanCode: u8, lowercase: u8) -> u8;
    #[link_name = "\u{1}_Z18KeyRingBufferResetv"]
    pub fn KeyRingBufferReset();
    #[link_name = "\u{1}_Z17KeyRingBufferReadPvj"]
    pub fn KeyRingBufferRead(pvDest: *mut ::core::ffi::c_void, cbDest: u32) -> u32;
    #[link_name = "\u{1}_Z18KeyRingBufferWritePKvj"]
    pub fn KeyRingBufferWrite(pvSrc: *const ::core::ffi::c_void, cbSrc: u32) -> u32;
    pub static mut LEDSTATE: *mut u32;
    #[link_name = "\u{1}_Z11LEDGetStatev"]
    pub fn LEDGetState() -> u32;
    #[link_name = "\u{1}_Z11LEDSetStatej"]
    pub fn LEDSetState(state: u32);
    pub fn mini_vsnprintf(
        buffer: *mut ::core::ffi::c_char,
        buffer_len: ::core::ffi::c_uint,
        fmt: *const ::core::ffi::c_char,
        va: va_list,
    ) -> ::core::ffi::c_int;
    pub fn mini_snprintf(
        buffer: *mut ::core::ffi::c_char,
        buffer_len: ::core::ffi::c_uint,
        fmt: *const ::core::ffi::c_char,
        ...
    ) -> ::core::ffi::c_int;
    #[link_name = "\u{1}_Z9c_isspacei"]
    pub fn c_isspace(c: ::core::ffi::c_int) -> ::core::ffi::c_int;
    #[link_name = "\u{1}_Z9c_isdigiti"]
    pub fn c_isdigit(c: ::core::ffi::c_int) -> ::core::ffi::c_int;
    #[link_name = "\u{1}_Z8c_sscanfPKcPcz"]
    pub fn c_sscanf(
        buff: *const ::core::ffi::c_char,
        format: *mut ::core::ffi::c_char,
        ...
    ) -> ::core::ffi::c_int;
    #[link_name = "\u{1}_Z7c_getchv"]
    pub fn c_getch() -> ::core::ffi::c_char;
    #[link_name = "\u{1}_Z11c_getbackchc"]
    pub fn c_getbackch(b: ::core::ffi::c_char) -> bool;
    pub static mut IO_SPIRXTX: *mut u8;
    pub static mut IO_CARDDETECT: *mut u8;
    #[link_name = "\u{1}_Z13SDCardStartupv"]
    pub fn SDCardStartup() -> ::core::ffi::c_int;
    #[link_name = "\u{1}_Z11SDIOControlhPv"]
    pub fn SDIOControl(cmd: u8, buffer: *mut ::core::ffi::c_void) -> ::core::ffi::c_int;
    #[link_name = "\u{1}_Z20SDReadMultipleBlocksPhjj"]
    pub fn SDReadMultipleBlocks(
        datablock: *mut u8,
        numblocks: u32,
        blockaddress: u32,
    ) -> ::core::ffi::c_int;
    #[link_name = "\u{1}_Z21SDWriteMultipleBlocksPKhjj"]
    pub fn SDWriteMultipleBlocks(
        datablock: *const u8,
        numblocks: u32,
        blockaddress: u32,
    ) -> ::core::ffi::c_int;
    #[link_name = "\u{1}_Z23SerialInRingBufferResetv"]
    pub fn SerialInRingBufferReset();
    #[link_name = "\u{1}_Z22SerialInRingBufferReadPvj"]
    pub fn SerialInRingBufferRead(pvDest: *mut ::core::ffi::c_void, cbDest: u32) -> u32;
    #[link_name = "\u{1}_Z23SerialInRingBufferWritePKvj"]
    pub fn SerialInRingBufferWrite(pvSrc: *const ::core::ffi::c_void, cbSrc: u32) -> u32;
    #[link_name = "\u{1}_Z14TaskGetContextj"]
    pub fn TaskGetContext(_hartid: u32) -> *mut STaskContext;
    #[link_name = "\u{1}_Z19TaskGetSharedMemoryv"]
    pub fn TaskGetSharedMemory() -> *mut ::core::ffi::c_void;
    #[link_name = "\u{1}_Z7TaskAddP12STaskContextPKcPFvvE10ETaskStatejj"]
    pub fn TaskAdd(
        _ctx: *mut STaskContext,
        _name: *const ::core::ffi::c_char,
        _task: taskfunc,
        _initialState: ETaskState,
        _runLength: u32,
        _stackAddress: u32,
    ) -> ::core::ffi::c_int;
    #[link_name = "\u{1}_Z16TaskSwitchToNextP12STaskContext"]
    pub fn TaskSwitchToNext(_ctx: *mut STaskContext) -> u32;
    #[link_name = "\u{1}_Z19TaskExitCurrentTaskP12STaskContext"]
    pub fn TaskExitCurrentTask(_ctx: *mut STaskContext);
    #[link_name = "\u{1}_Z18TaskExitTaskWithIDP12STaskContextjj"]
    pub fn TaskExitTaskWithID(_ctx: *mut STaskContext, _taskid: u32, _signal: u32);
    #[link_name = "\u{1}_Z9TaskYieldv"]
    pub fn TaskYield();
    #[link_name = "\u{1}_Z12TaskSetStateP12STaskContextj10ETaskState"]
    pub fn TaskSetState(_ctx: *mut STaskContext, _taskid: u32, _state: ETaskState);
    #[link_name = "\u{1}_Z12TaskGetStateP12STaskContextj"]
    pub fn TaskGetState(_ctx: *mut STaskContext, _taskid: u32) -> ETaskState;
    #[link_name = "\u{1}_Z9TaskGetPCP12STaskContextj"]
    pub fn TaskGetPC(_ctx: *mut STaskContext, _taskid: u32) -> u32;
    #[link_name = "\u{1}_Z21UARTInterceptSetStatei"]
    pub fn UARTInterceptSetState(state: ::core::ffi::c_int);
    #[link_name = "\u{1}_Z13UARTGetStatusv"]
    pub fn UARTGetStatus() -> u32;
    #[link_name = "\u{1}_Z14UARTSetControlj"]
    pub fn UARTSetControl(ctl: u32);
    #[link_name = "\u{1}_Z15UARTReceiveDatav"]
    pub fn UARTReceiveData() -> u32;
    #[link_name = "\u{1}_Z12UARTSendByteh"]
    pub fn UARTSendByte(data: u8);
    #[link_name = "\u{1}_Z13UARTSendBlockPhj"]
    pub fn UARTSendBlock(data: *mut u8, numBytes: u32);
    #[link_name = "\u{1}_Z10UARTPrintfPKcz"]
    pub fn UARTPrintf(fmt: *const ::core::ffi::c_char, ...) -> ::core::ffi::c_int;
    #[link_name = "\u{1}_Z17VPUAllocateBufferj"]
    pub fn VPUAllocateBuffer(_size: u32) -> *mut u8;
    #[link_name = "\u{1}_Z16VPUGetDimensions10EVideoModePjS0_"]
    pub fn VPUGetDimensions(_mode: EVideoMode, _width: *mut u32, _height: *mut u32);
    #[link_name = "\u{1}_Z20VPUSetDefaultPaletteP13EVideoContext"]
    pub fn VPUSetDefaultPalette(_context: *mut EVideoContext);
    #[link_name = "\u{1}_Z11VPUSetVModeP13EVideoContext19EVideoScanoutEnable"]
    pub fn VPUSetVMode(_context: *mut EVideoContext, _scanEnable: EVideoScanoutEnable);
    #[link_name = "\u{1}_Z20VPUSetScanoutAddressP13EVideoContextj"]
    pub fn VPUSetScanoutAddress(_context: *mut EVideoContext, _scanOutAddress64ByteAligned: u32);
    #[link_name = "\u{1}_Z18VPUSetWriteAddressP13EVideoContextj"]
    pub fn VPUSetWriteAddress(_context: *mut EVideoContext, _cpuWriteAddress64ByteAligned: u32);
    #[link_name = "\u{1}_Z9VPUSetPalhjjj"]
    pub fn VPUSetPal(_paletteIndex: u8, _red: u32, _green: u32, _blue: u32);
    #[link_name = "\u{1}_Z20VPUReadVBlankCounterv"]
    pub fn VPUReadVBlankCounter() -> u32;
    #[link_name = "\u{1}_Z14VPUGetScanlinev"]
    pub fn VPUGetScanline() -> u32;
    #[link_name = "\u{1}_Z12VPUSwapPagesP13EVideoContextP17EVideoSwapContext"]
    pub fn VPUSwapPages(_vx: *mut EVideoContext, _sc: *mut EVideoSwapContext);
    #[link_name = "\u{1}_Z12VPUWaitVSyncv"]
    pub fn VPUWaitVSync();
    #[link_name = "\u{1}_Z14VPUPrintStringP13EVideoContexthhttPKci"]
    pub fn VPUPrintString(
        _context: *mut EVideoContext,
        _foregroundIndex: u8,
        _backgroundIndex: u8,
        _x: u16,
        _y: u16,
        _message: *const ::core::ffi::c_char,
        _length: ::core::ffi::c_int,
    );
    #[link_name = "\u{1}_Z19VPUConsoleSetColorsP13EVideoContexthh"]
    pub fn VPUConsoleSetColors(
        _context: *mut EVideoContext,
        _foregroundIndex: u8,
        _backgroundIndex: u8,
    );
    #[link_name = "\u{1}_Z15VPUConsoleClearP13EVideoContext"]
    pub fn VPUConsoleClear(_context: *mut EVideoContext);
    #[link_name = "\u{1}_Z19VPUConsoleSetCursorP13EVideoContexttt"]
    pub fn VPUConsoleSetCursor(_context: *mut EVideoContext, _x: u16, _y: u16);
    #[link_name = "\u{1}_Z15VPUConsolePrintP13EVideoContextPKci"]
    pub fn VPUConsolePrint(
        _context: *mut EVideoContext,
        _message: *const ::core::ffi::c_char,
        _length: ::core::ffi::c_int,
    );
    #[link_name = "\u{1}_Z17VPUConsoleResolveP13EVideoContext"]
    pub fn VPUConsoleResolve(_context: *mut EVideoContext);
    #[link_name = "\u{1}_Z18VPUConsoleSetCaretP13EVideoContextttt"]
    pub fn VPUConsoleSetCaret(_context: *mut EVideoContext, _x: u16, _y: u16, _blink: u16);
    #[link_name = "\u{1}_Z19VPUConsoleClearLineP13EVideoContextt"]
    pub fn VPUConsoleClearLine(_context: *mut EVideoContext, _y: u16);
    #[link_name = "\u{1}_Z18VPUConsoleFillLineP13EVideoContextc"]
    pub fn VPUConsoleFillLine(
        _context: *mut EVideoContext,
        _character: ::core::ffi::c_char,
    ) -> ::core::ffi::c_int;
    #[link_name = "\u{1}_Z18VPUConsoleScrollUpP13EVideoContext"]
    pub fn VPUConsoleScrollUp(_context: *mut EVideoContext);
    #[link_name = "\u{1}_Z8VPUClearP13EVideoContextj"]
    pub fn VPUClear(_context: *mut EVideoContext, _colorWord: u32);
    #[link_name = "\u{1}_Z22VPUGetKernelGfxContextv"]
    pub fn VPUGetKernelGfxContext() -> *mut EVideoContext;
}
